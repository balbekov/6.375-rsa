/*
 * Generated by Bluespec Compiler, version 2012.10.beta2 (build 29674, 2012-10.10)
 * 
 * On Wed Apr 17 15:19:32 EDT 2013
 * 
 */

/* Generation options: keep-fires */
#ifndef __mkBridge_h__
#define __mkBridge_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"
#include "mkSceMiUInt32Parameter.h"
#include "mkSceMiLinkTypeParameter.h"
#include "mkSceMiUInt64Parameter.h"
#include "mkDutWrapper.h"


/* Class declaration for the mkBridge module */
class MOD_mkBridge : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
  tClock __clk_handle_1;
  tClock __clk_handle_2;
  tClock __clk_handle_3;
  tClock __clk_handle_4;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt8> INST_scemi_active_requests;
  MOD_Reg<tUInt8> INST_scemi_active_requests_1;
  MOD_Reg<tUInt8> INST_scemi_active_requests_2;
  MOD_Reg<tUInt8> INST_scemi_active_requests_3;
  MOD_Reg<tUInt32> INST_scemi_bits_remaining;
  MOD_Reg<tUInt32> INST_scemi_bridge_beat_from_tcp;
  MOD_Wire<tUInt8> INST_scemi_bridge_beat_from_tcp_ready;
  MOD_Wire<tUInt8> INST_scemi_bridge_beat_taken;
  MOD_Reg<tUInt32> INST_scemi_bridge_beat_to_tcp;
  MOD_Wire<tUInt32> INST_scemi_bridge_current_beat;
  MOD_Reg<tUInt32> INST_scemi_bridge_fd;
  MOD_Wire<tUInt8> INST_scemi_bridge_incoming_beat;
  MOD_Wire<tUInt8> INST_scemi_bridge_mr_dont_wait_w;
  MOD_Wire<tUInt8> INST_scemi_bridge_mr_dst_w;
  MOD_Wire<tUInt8> INST_scemi_bridge_mr_first_beat_pw;
  MOD_Reg<tUInt8> INST_scemi_bridge_mr_header_pos;
  MOD_Wire<tUInt8> INST_scemi_bridge_mr_last_beat_pw;
  MOD_Wire<tUInt8> INST_scemi_bridge_mr_len_w;
  MOD_Wire<tUInt32> INST_scemi_bridge_mr_new_remaining;
  MOD_Wire<tUInt8> INST_scemi_bridge_mr_opcode_w;
  MOD_Reg<tUInt32> INST_scemi_bridge_mr_remaining;
  MOD_Wire<tUInt8> INST_scemi_bridge_mr_src_w;
  MOD_Wire<tUInt32> INST_scemi_bridge_mr_the_beat;
  MOD_Reg<tUInt8> INST_scemi_bridge_nbytes_from_tcp;
  MOD_Reg<tUInt8> INST_scemi_bridge_nbytes_to_tcp;
  MOD_Wire<tUInt8> INST_scemi_bridge_shutdown;
  MOD_MakeClock INST_scemi_clk_port_clkgen;
  MOD_mkSceMiUInt32Parameter INST_scemi_clk_port_param_clockGroup;
  MOD_mkSceMiUInt32Parameter INST_scemi_clk_port_param_clockNum;
  MOD_mkSceMiUInt32Parameter INST_scemi_clk_port_param_dutyHi;
  MOD_mkSceMiUInt32Parameter INST_scemi_clk_port_param_dutyLo;
  MOD_mkSceMiLinkTypeParameter INST_scemi_clk_port_param_link_type;
  MOD_mkSceMiUInt32Parameter INST_scemi_clk_port_param_phase;
  MOD_mkSceMiUInt64Parameter INST_scemi_clk_port_param_ratioDen;
  MOD_mkSceMiUInt64Parameter INST_scemi_clk_port_param_ratioNum;
  MOD_mkSceMiUInt32Parameter INST_scemi_clk_port_param_rstStage;
  MOD_ResetEither INST_scemi_clk_port_rstgen_final_reset;
  MOD_Reg<tUInt8> INST_scemi_clk_port_rstgen_init;
  MOD_ClockInverter INST_scemi_clk_port_rstgen_inv_clk;
  MOD_MakeReset INST_scemi_clk_port_rstgen_inv_rstgen;
  MOD_SyncReset0 INST_scemi_clk_port_rstgen_inv_rstn;
  MOD_MakeReset0 INST_scemi_clk_port_rstgen_rstgen;
  MOD_Reg<tUInt32> INST_scemi_clockGenerators_clock_gens_counters_count;
  MOD_Sync1 INST_scemi_clockGenerators_clock_gens_counters_pre_negedge_uclk;
  MOD_Sync1 INST_scemi_clockGenerators_clock_gens_counters_pre_posedge_uclk;
  MOD_Wire<tUInt8> INST_scemi_clockGenerators_clock_gens_counters_stall_pw;
  MOD_Wire<tUInt8> INST_scemi_clockGenerators_clock_gens_in_reset_pw;
  MOD_Wire<tUInt8> INST_scemi_clockGenerators_clock_gens_is_allowed_sync;
  MOD_Reg<tUInt8> INST_scemi_clockGenerators_clock_gens_out_of_reset_reg;
  MOD_Reg<tUInt32> INST_scemi_clockGenerators_clock_gens_reset_counter;
  MOD_Wire<tUInt8> INST_scemi_clockGenerators_clock_gens_stall_pw;
  MOD_Reg<tUInt8> INST_scemi_clockGenerators_clock_gens_stalled;
  MOD_Reg<tUInt8> INST_scemi_clockGenerators_free_stamp;
  MOD_Reg<tUInt32> INST_scemi_clockGenerators_one_to_one_cclock_count;
  MOD_Sync1 INST_scemi_clockGenerators_one_to_one_cclock_pre_negedge_uclk;
  MOD_Sync1 INST_scemi_clockGenerators_one_to_one_cclock_pre_posedge_uclk;
  MOD_Wire<tUInt8> INST_scemi_clockGenerators_one_to_one_cclock_stall_pw;
  MOD_Reg<tUInt64> INST_scemi_curr_stamp;
  MOD_Reg<tUInt32> INST_scemi_data_port_number;
  MOD_Fifo<tUInt8> INST_scemi_dut_dut_dutIfc_didreset;
  MOD_mkDutWrapper INST_scemi_dut_dut_dutIfc_m_dut;
  MOD_MakeReset INST_scemi_dut_dut_dutIfc_myrst;
  MOD_Reg<tUInt8> INST_scemi_dut_dut_dutIfc_resetting;
  MOD_Fifo<tUInt32> INST_scemi_dut_dut_prb_control_ackFifo;
  MOD_SyncHandshake INST_scemi_dut_dut_prb_control_control_in_buffer_empty_sp;
  MOD_SyncHandshake INST_scemi_dut_dut_prb_control_control_in_buffer_full_sp;
  MOD_Wire<tUInt8> INST_scemi_dut_dut_prb_control_control_in_dataF_pw_deq;
  MOD_Wire<tUInt32> INST_scemi_dut_dut_prb_control_control_in_dataF_rw_enq;
  MOD_Reg<tUInt32> INST_scemi_dut_dut_prb_control_control_in_dataF_taggedReg;
  MOD_SyncPulse INST_scemi_dut_dut_prb_control_control_in_ending_reset;
  MOD_Wire<tUInt8> INST_scemi_dut_dut_prb_control_control_in_got_word_pw;
  MOD_Reg<tUInt8> INST_scemi_dut_dut_prb_control_control_in_in_reset_noc;
  MOD_Reg<tUInt8> INST_scemi_dut_dut_prb_control_control_in_in_reset_uclk;
  MOD_SyncHandshake INST_scemi_dut_dut_prb_control_control_in_next_sp;
  MOD_mkSceMiUInt32Parameter INST_scemi_dut_dut_prb_control_control_in_param_channelId;
  MOD_mkSceMiLinkTypeParameter INST_scemi_dut_dut_prb_control_control_in_param_link_type;
  MOD_Reg<tUInt8> INST_scemi_dut_dut_prb_control_control_in_prev_reset_uclk;
  MOD_Reg<tUInt8> INST_scemi_dut_dut_prb_control_control_in_remaining;
  MOD_Wire<tUInt8> INST_scemi_dut_dut_prb_control_control_in_requestF_pw_deq;
  MOD_Wire<tUInt8> INST_scemi_dut_dut_prb_control_control_in_requestF_rw_enq;
  MOD_Reg<tUInt8> INST_scemi_dut_dut_prb_control_control_in_requestF_taggedReg;
  MOD_Wire<tUInt8> INST_scemi_dut_dut_prb_control_control_in_request_pw;
  MOD_Reg<tUInt32> INST_scemi_dut_dut_prb_control_control_in_scemiInportWords;
  MOD_SyncPulse INST_scemi_dut_dut_prb_control_control_in_starting_reset;
  MOD_Reg<tUInt8> INST_scemi_dut_dut_prb_control_control_in_status;
  MOD_Reg<tUInt32> INST_scemi_dut_dut_prb_control_count;
  MOD_Reg<tUInt8> INST_scemi_dut_dut_prb_control_data_out_count;
  MOD_Wire<tUInt8> INST_scemi_dut_dut_prb_control_data_out_decr;
  MOD_SyncPulse INST_scemi_dut_dut_prb_control_data_out_ending_reset;
  MOD_SyncHandshake INST_scemi_dut_dut_prb_control_data_out_finished;
  MOD_Reg<tUInt8> INST_scemi_dut_dut_prb_control_data_out_in_reset_noc;
  MOD_Reg<tUInt8> INST_scemi_dut_dut_prb_control_data_out_in_reset_uclk;
  MOD_SyncHandshake INST_scemi_dut_dut_prb_control_data_out_next;
  MOD_Reg<tUInt8> INST_scemi_dut_dut_prb_control_data_out_ok;
  MOD_mkSceMiUInt32Parameter INST_scemi_dut_dut_prb_control_data_out_param_channelId;
  MOD_mkSceMiLinkTypeParameter INST_scemi_dut_dut_prb_control_data_out_param_link_type;
  MOD_Reg<tUInt8> INST_scemi_dut_dut_prb_control_data_out_prev_reset_uclk;
  MOD_SyncPulse INST_scemi_dut_dut_prb_control_data_out_starting_reset;
  MOD_Reg<tUInt32> INST_scemi_dut_dut_prb_control_data_out_words;
  MOD_Wire<tUInt8> INST_scemi_dut_dut_prb_control_dutclkctrl;
  MOD_mkSceMiUInt32Parameter INST_scemi_dut_dut_prb_control_dutclkctrl_param_clockNum;
  MOD_mkSceMiLinkTypeParameter INST_scemi_dut_dut_prb_control_dutclkctrl_param_link_type;
  MOD_Wire<tUInt8> INST_scemi_dut_dut_prb_control_dutclkctrl_pre_neg_pw;
  MOD_Wire<tUInt8> INST_scemi_dut_dut_prb_control_dutclkctrl_pre_pos_pw;
  MOD_Fifo<tUInt32> INST_scemi_dut_dut_prb_control_enff;
  MOD_Reg<tUInt8> INST_scemi_dut_dut_prb_control_flag;
  MOD_Reg<tUInt64> INST_scemi_dut_dut_prb_control_nextSample;
  MOD_Reg<tUInt8> INST_scemi_dut_dut_prb_control_pinged;
  MOD_Fifo<tUInt32> INST_scemi_dut_dut_prb_control_prb_str;
  MOD_Wire<tUInt32> INST_scemi_dut_dut_prb_control_prb_str_recv_d;
  MOD_Reg<tUInt8> INST_scemi_dut_dut_prb_control_sampleIntervalV;
  MOD_Reg<tUInt8> INST_scemi_dut_dut_prb_control_sampleIntervalV_1;
  MOD_Reg<tUInt8> INST_scemi_dut_dut_prb_control_sampleIntervalV_2;
  MOD_Reg<tUInt8> INST_scemi_dut_dut_prb_control_sampleIntervalV_3;
  MOD_SyncHandshake INST_scemi_dut_softrst_req_inport_buffer_empty_sp;
  MOD_SyncHandshake INST_scemi_dut_softrst_req_inport_buffer_full_sp;
  MOD_Wire<tUInt8> INST_scemi_dut_softrst_req_inport_dataF_pw_deq;
  MOD_Wire<tUInt8> INST_scemi_dut_softrst_req_inport_dataF_rw_enq;
  MOD_Reg<tUInt8> INST_scemi_dut_softrst_req_inport_dataF_taggedReg;
  MOD_SyncPulse INST_scemi_dut_softrst_req_inport_ending_reset;
  MOD_Wire<tUInt8> INST_scemi_dut_softrst_req_inport_got_word_pw;
  MOD_Reg<tUInt8> INST_scemi_dut_softrst_req_inport_in_reset_noc;
  MOD_Reg<tUInt8> INST_scemi_dut_softrst_req_inport_in_reset_uclk;
  MOD_SyncHandshake INST_scemi_dut_softrst_req_inport_next_sp;
  MOD_mkSceMiUInt32Parameter INST_scemi_dut_softrst_req_inport_param_channelId;
  MOD_mkSceMiLinkTypeParameter INST_scemi_dut_softrst_req_inport_param_link_type;
  MOD_Reg<tUInt8> INST_scemi_dut_softrst_req_inport_prev_reset_uclk;
  MOD_Reg<tUInt8> INST_scemi_dut_softrst_req_inport_remaining;
  MOD_Wire<tUInt8> INST_scemi_dut_softrst_req_inport_requestF_pw_deq;
  MOD_Wire<tUInt8> INST_scemi_dut_softrst_req_inport_requestF_rw_enq;
  MOD_Reg<tUInt8> INST_scemi_dut_softrst_req_inport_requestF_taggedReg;
  MOD_Wire<tUInt8> INST_scemi_dut_softrst_req_inport_request_pw;
  MOD_Reg<tUInt32> INST_scemi_dut_softrst_req_inport_scemiInportWords;
  MOD_SyncPulse INST_scemi_dut_softrst_req_inport_starting_reset;
  MOD_Reg<tUInt8> INST_scemi_dut_softrst_req_inport_status;
  MOD_SyncFIFO<tUInt8,tUInt8> INST_scemi_dut_softrst_req_res_fifo;
  MOD_Reg<tUInt8> INST_scemi_dut_softrst_resp_outport_count;
  MOD_Wire<tUInt8> INST_scemi_dut_softrst_resp_outport_decr;
  MOD_SyncPulse INST_scemi_dut_softrst_resp_outport_ending_reset;
  MOD_SyncHandshake INST_scemi_dut_softrst_resp_outport_finished;
  MOD_Reg<tUInt8> INST_scemi_dut_softrst_resp_outport_in_reset_noc;
  MOD_Reg<tUInt8> INST_scemi_dut_softrst_resp_outport_in_reset_uclk;
  MOD_SyncHandshake INST_scemi_dut_softrst_resp_outport_next;
  MOD_Reg<tUInt8> INST_scemi_dut_softrst_resp_outport_ok;
  MOD_mkSceMiUInt32Parameter INST_scemi_dut_softrst_resp_outport_param_channelId;
  MOD_mkSceMiLinkTypeParameter INST_scemi_dut_softrst_resp_outport_param_link_type;
  MOD_Reg<tUInt8> INST_scemi_dut_softrst_resp_outport_prev_reset_uclk;
  MOD_SyncPulse INST_scemi_dut_softrst_resp_outport_starting_reset;
  MOD_Reg<tUInt32> INST_scemi_dut_softrst_resp_outport_words;
  MOD_SyncFIFO<tUInt8,tUInt8> INST_scemi_dut_softrst_resp_res_fifo;
  MOD_Wire<tUInt32> INST_scemi_from_bridge_beat;
  MOD_Wire<tUInt8> INST_scemi_from_bridge_ready;
  MOD_Reg<tUInt8> INST_scemi_handle_data_ack;
  MOD_Wire<tUInt8> INST_scemi_init_state_any_in_reset;
  MOD_Reg<tUInt8> INST_scemi_init_state_any_in_reset_uclk;
  MOD_Reg<tUInt64> INST_scemi_init_state_cycle_stamp;
  MOD_SyncFIFO<tUWide,tUInt8> INST_scemi_init_state_msgFIFO;
  MOD_Reg<tUInt32> INST_scemi_init_state_out_port;
  MOD_Reg<tUInt32> INST_scemi_input_pipe_target;
  MOD_Reg<tUInt32> INST_scemi_input_port_target;
  MOD_Reg<tUInt8> INST_scemi_is_continuation_msg;
  MOD_Reg<tUInt8> INST_scemi_is_final_msg;
  MOD_Reg<tUInt8> INST_scemi_is_scemi2_data_input;
  MOD_SyncHandshake INST_scemi_mem_inport_buffer_empty_sp;
  MOD_SyncHandshake INST_scemi_mem_inport_buffer_full_sp;
  MOD_Wire<tUInt8> INST_scemi_mem_inport_dataF_pw_deq;
  MOD_Wire<tUInt64> INST_scemi_mem_inport_dataF_rw_enq;
  MOD_Reg<tUInt64> INST_scemi_mem_inport_dataF_taggedReg;
  MOD_SyncPulse INST_scemi_mem_inport_ending_reset;
  MOD_Wire<tUInt8> INST_scemi_mem_inport_got_word_pw;
  MOD_Reg<tUInt8> INST_scemi_mem_inport_in_reset_noc;
  MOD_Reg<tUInt8> INST_scemi_mem_inport_in_reset_uclk;
  MOD_SyncHandshake INST_scemi_mem_inport_next_sp;
  MOD_mkSceMiUInt32Parameter INST_scemi_mem_inport_param_channelId;
  MOD_mkSceMiLinkTypeParameter INST_scemi_mem_inport_param_link_type;
  MOD_Reg<tUInt8> INST_scemi_mem_inport_prev_reset_uclk;
  MOD_Reg<tUInt8> INST_scemi_mem_inport_remaining;
  MOD_Wire<tUInt8> INST_scemi_mem_inport_requestF_pw_deq;
  MOD_Wire<tUInt8> INST_scemi_mem_inport_requestF_rw_enq;
  MOD_Reg<tUInt8> INST_scemi_mem_inport_requestF_taggedReg;
  MOD_Wire<tUInt8> INST_scemi_mem_inport_request_pw;
  MOD_Reg<tUInt32> INST_scemi_mem_inport_scemiInportWords;
  MOD_Reg<tUInt32> INST_scemi_mem_inport_scemiInportWords_1;
  MOD_SyncPulse INST_scemi_mem_inport_starting_reset;
  MOD_Reg<tUInt8> INST_scemi_mem_inport_status;
  MOD_SyncFIFO<tUInt64,tUInt8> INST_scemi_mem_res_fifo;
  MOD_Reg<tUInt8> INST_scemi_msg_payload_size;
  MOD_Reg<tUInt32> INST_scemi_msg_pos;
  MOD_Reg<tUInt8> INST_scemi_next_out_msg_scemi1;
  MOD_Wire<tUInt8> INST_scemi_output_mr_dont_wait_w;
  MOD_Wire<tUInt8> INST_scemi_output_mr_dst_w;
  MOD_Wire<tUInt8> INST_scemi_output_mr_first_beat_pw;
  MOD_Reg<tUInt8> INST_scemi_output_mr_header_pos;
  MOD_Wire<tUInt8> INST_scemi_output_mr_last_beat_pw;
  MOD_Wire<tUInt8> INST_scemi_output_mr_len_w;
  MOD_Wire<tUInt32> INST_scemi_output_mr_new_remaining;
  MOD_Wire<tUInt8> INST_scemi_output_mr_opcode_w;
  MOD_Reg<tUInt32> INST_scemi_output_mr_remaining;
  MOD_Wire<tUInt8> INST_scemi_output_mr_src_w;
  MOD_Wire<tUInt32> INST_scemi_output_mr_the_beat;
  MOD_Reg<tUInt8> INST_scemi_output_msg_in_progress;
  MOD_mkSceMiLinkTypeParameter INST_scemi_param_link_type;
  MOD_Reg<tUInt8> INST_scemi_pending_requests;
  MOD_Reg<tUInt8> INST_scemi_pending_requests_1;
  MOD_Reg<tUInt8> INST_scemi_pending_requests_2;
  MOD_Reg<tUInt8> INST_scemi_pending_requests_3;
  MOD_Reg<tUInt32> INST_scemi_ports_to_ack;
  MOD_Reg<tUInt8> INST_scemi_req_msg_grant;
  MOD_Reg<tUInt32> INST_scemi_req_port_number;
  MOD_Wire<tUInt8> INST_scemi_rising_uclock_pw;
  MOD_Reg<tUInt8> INST_scemi_rsa_result_outport_count;
  MOD_Wire<tUInt8> INST_scemi_rsa_result_outport_decr;
  MOD_SyncPulse INST_scemi_rsa_result_outport_ending_reset;
  MOD_SyncHandshake INST_scemi_rsa_result_outport_finished;
  MOD_Reg<tUInt8> INST_scemi_rsa_result_outport_in_reset_noc;
  MOD_Reg<tUInt8> INST_scemi_rsa_result_outport_in_reset_uclk;
  MOD_SyncHandshake INST_scemi_rsa_result_outport_next;
  MOD_Reg<tUInt8> INST_scemi_rsa_result_outport_ok;
  MOD_mkSceMiUInt32Parameter INST_scemi_rsa_result_outport_param_channelId;
  MOD_mkSceMiLinkTypeParameter INST_scemi_rsa_result_outport_param_link_type;
  MOD_Reg<tUInt8> INST_scemi_rsa_result_outport_prev_reset_uclk;
  MOD_SyncPulse INST_scemi_rsa_result_outport_starting_reset;
  MOD_Reg<tUInt32> INST_scemi_rsa_result_outport_words;
  MOD_SyncFIFO<tUInt32,tUInt8> INST_scemi_rsa_result_res_fifo;
  MOD_ResetEither INST_scemi_rstgen_final_reset;
  MOD_Reg<tUInt8> INST_scemi_rstgen_init;
  MOD_ClockInverter INST_scemi_rstgen_inv_clk;
  MOD_MakeReset INST_scemi_rstgen_inv_rstgen;
  MOD_SyncReset0 INST_scemi_rstgen_inv_rstn;
  MOD_MakeReset0 INST_scemi_rstgen_rstgen;
  MOD_Reg<tUInt8> INST_scemi_scemi1_discard;
  MOD_Reg<tUInt8> INST_scemi_scemi1_msg_in_progress;
  MOD_Reg<tUInt32> INST_scemi_scemi1_msg_len;
  MOD_Fifo<tUInt32> INST_scemi_scemi1_msgs_in;
  MOD_Fifo<tUInt32> INST_scemi_scemi1_msgs_out;
  MOD_Reg<tUInt8> INST_scemi_scemi2_msg_in_progress;
  MOD_Reg<tUInt32> INST_scemi_scemi2_msg_len;
  MOD_Fifo<tUInt32> INST_scemi_scemi2_msgs_in;
  MOD_Fifo<tUInt32> INST_scemi_scemi2_msgs_out;
  MOD_Reg<tUInt8> INST_scemi_scemi2_owner;
  MOD_Reg<tUInt8> INST_scemi_scemi_msg_version;
  MOD_Reg<tUInt8> INST_scemi_send_data_msg;
  MOD_Reg<tUInt8> INST_scemi_send_req_msg;
  MOD_SyncHandshake INST_scemi_shutdown_ctrl_in_buffer_empty_sp;
  MOD_SyncHandshake INST_scemi_shutdown_ctrl_in_buffer_full_sp;
  MOD_Wire<tUInt8> INST_scemi_shutdown_ctrl_in_dataF_pw_deq;
  MOD_Wire<tUInt8> INST_scemi_shutdown_ctrl_in_dataF_rw_enq;
  MOD_Reg<tUInt8> INST_scemi_shutdown_ctrl_in_dataF_taggedReg;
  MOD_SyncPulse INST_scemi_shutdown_ctrl_in_ending_reset;
  MOD_Wire<tUInt8> INST_scemi_shutdown_ctrl_in_got_word_pw;
  MOD_Reg<tUInt8> INST_scemi_shutdown_ctrl_in_in_reset_noc;
  MOD_Reg<tUInt8> INST_scemi_shutdown_ctrl_in_in_reset_uclk;
  MOD_SyncHandshake INST_scemi_shutdown_ctrl_in_next_sp;
  MOD_mkSceMiUInt32Parameter INST_scemi_shutdown_ctrl_in_param_channelId;
  MOD_mkSceMiLinkTypeParameter INST_scemi_shutdown_ctrl_in_param_link_type;
  MOD_Reg<tUInt8> INST_scemi_shutdown_ctrl_in_prev_reset_uclk;
  MOD_Reg<tUInt8> INST_scemi_shutdown_ctrl_in_remaining;
  MOD_Wire<tUInt8> INST_scemi_shutdown_ctrl_in_requestF_pw_deq;
  MOD_Wire<tUInt8> INST_scemi_shutdown_ctrl_in_requestF_rw_enq;
  MOD_Reg<tUInt8> INST_scemi_shutdown_ctrl_in_requestF_taggedReg;
  MOD_Wire<tUInt8> INST_scemi_shutdown_ctrl_in_request_pw;
  MOD_Reg<tUInt32> INST_scemi_shutdown_ctrl_in_scemiInportWords;
  MOD_SyncPulse INST_scemi_shutdown_ctrl_in_starting_reset;
  MOD_Reg<tUInt8> INST_scemi_shutdown_ctrl_in_status;
  MOD_Reg<tUInt8> INST_scemi_shutdown_ctrl_out_count;
  MOD_Wire<tUInt8> INST_scemi_shutdown_ctrl_out_decr;
  MOD_SyncPulse INST_scemi_shutdown_ctrl_out_ending_reset;
  MOD_SyncHandshake INST_scemi_shutdown_ctrl_out_finished;
  MOD_Reg<tUInt8> INST_scemi_shutdown_ctrl_out_in_reset_noc;
  MOD_Reg<tUInt8> INST_scemi_shutdown_ctrl_out_in_reset_uclk;
  MOD_SyncHandshake INST_scemi_shutdown_ctrl_out_next;
  MOD_Reg<tUInt8> INST_scemi_shutdown_ctrl_out_ok;
  MOD_mkSceMiUInt32Parameter INST_scemi_shutdown_ctrl_out_param_channelId;
  MOD_mkSceMiLinkTypeParameter INST_scemi_shutdown_ctrl_out_param_link_type;
  MOD_Reg<tUInt8> INST_scemi_shutdown_ctrl_out_prev_reset_uclk;
  MOD_SyncPulse INST_scemi_shutdown_ctrl_out_starting_reset;
  MOD_Reg<tUInt32> INST_scemi_shutdown_ctrl_out_words;
  MOD_Reg<tUInt8> INST_scemi_shutdown_shutdown_pending;
  MOD_Wire<tUInt8> INST_scemi_suppress_inpipe_access;
  MOD_Reg<tUInt32> INST_scemi_tcp_port_number;
  MOD_Wire<tUInt32> INST_scemi_to_bridge_beat;
  MOD_Wire<tUInt8> INST_scemi_to_bridge_ready;
  MOD_MakeClock INST_scemi_uclkgen;
 
 /* Constructor */
 public:
  MOD_mkBridge(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
  void init_symbols_1();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_scemi_dut_dut_dutIfc_myrst$OUT_RST;
  tUInt8 PORT_scemi_clk_port_rstgen_final_reset$RST_OUT;
  tUInt8 PORT_scemi_clk_port_rstgen_rstgen$OUT_RST;
  tUInt8 PORT_scemi_clk_port_rstgen_inv_rstgen$OUT_RST;
  tUInt8 PORT_scemi_clk_port_rstgen_inv_rstn$OUT_RST;
  tUInt8 PORT_scemi_rstgen_final_reset$RST_OUT;
  tUInt8 PORT_scemi_rstgen_rstgen$OUT_RST;
  tUInt8 PORT_scemi_rstgen_inv_rstgen$OUT_RST;
  tUInt8 PORT_scemi_rstgen_inv_rstn$OUT_RST;
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE___me_check_2;
  tUInt8 DEF_CAN_FIRE___me_check_2;
  tUInt8 DEF_WILL_FIRE_RL_scemi_connect_data_1;
  tUInt8 DEF_CAN_FIRE_RL_scemi_connect_data_1;
  tUInt8 DEF_WILL_FIRE_RL_scemi_connect_dst_rdy_1;
  tUInt8 DEF_CAN_FIRE_RL_scemi_connect_dst_rdy_1;
  tUInt8 DEF_WILL_FIRE_RL_scemi_connect_src_rdy_1;
  tUInt8 DEF_CAN_FIRE_RL_scemi_connect_src_rdy_1;
  tUInt8 DEF_WILL_FIRE_RL_scemi_connect_data;
  tUInt8 DEF_CAN_FIRE_RL_scemi_connect_data;
  tUInt8 DEF_WILL_FIRE_RL_scemi_connect_dst_rdy;
  tUInt8 DEF_CAN_FIRE_RL_scemi_connect_dst_rdy;
  tUInt8 DEF_WILL_FIRE_RL_scemi_connect_src_rdy;
  tUInt8 DEF_CAN_FIRE_RL_scemi_connect_src_rdy;
  tUInt8 DEF_WILL_FIRE_RL_scemi_swap_scemi1_output_grant;
  tUInt8 DEF_CAN_FIRE_RL_scemi_swap_scemi1_output_grant;
  tUInt8 DEF_WILL_FIRE_RL_scemi_send_output_data;
  tUInt8 DEF_CAN_FIRE_RL_scemi_send_output_data;
  tUInt8 DEF_WILL_FIRE_RL_scemi_start_output_data_msg;
  tUInt8 DEF_CAN_FIRE_RL_scemi_start_output_data_msg;
  tUInt8 DEF_WILL_FIRE_RL_scemi_scan_output_ports;
  tUInt8 DEF_CAN_FIRE_RL_scemi_scan_output_ports;
  tUInt8 DEF_WILL_FIRE_RL_scemi_send_request_msg;
  tUInt8 DEF_CAN_FIRE_RL_scemi_send_request_msg;
  tUInt8 DEF_WILL_FIRE_RL_scemi_start_next_request;
  tUInt8 DEF_CAN_FIRE_RL_scemi_start_next_request;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shift_request_vector;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shift_request_vector;
  tUInt8 DEF_WILL_FIRE_RL_scemi_load_new_request_group;
  tUInt8 DEF_CAN_FIRE_RL_scemi_load_new_request_group;
  tUInt8 DEF_WILL_FIRE_RL_scemi_accumulate_pending_requests;
  tUInt8 DEF_CAN_FIRE_RL_scemi_accumulate_pending_requests;
  tUInt8 DEF_WILL_FIRE_RL_scemi_swap_output_grant;
  tUInt8 DEF_CAN_FIRE_RL_scemi_swap_output_grant;
  tUInt8 DEF_WILL_FIRE_RL_scemi_end_of_output_msg;
  tUInt8 DEF_CAN_FIRE_RL_scemi_end_of_output_msg;
  tUInt8 DEF_WILL_FIRE_RL_scemi_start_of_output_msg;
  tUInt8 DEF_CAN_FIRE_RL_scemi_start_of_output_msg;
  tUInt8 DEF_WILL_FIRE_RL_scemi_move_scemi2_beat;
  tUInt8 DEF_CAN_FIRE_RL_scemi_move_scemi2_beat;
  tUInt8 DEF_WILL_FIRE_RL_scemi_move_scemi1_beat;
  tUInt8 DEF_CAN_FIRE_RL_scemi_move_scemi1_beat;
  tUInt8 DEF_WILL_FIRE_RL_scemi_send_scemi2_beat;
  tUInt8 DEF_CAN_FIRE_RL_scemi_send_scemi2_beat;
  tUInt8 DEF_WILL_FIRE_RL_scemi_send_scemi1_beat;
  tUInt8 DEF_CAN_FIRE_RL_scemi_send_scemi1_beat;
  tUInt8 DEF_WILL_FIRE_RL_scemi_output_mr_detect_last_beat;
  tUInt8 DEF_CAN_FIRE_RL_scemi_output_mr_detect_last_beat;
  tUInt8 DEF_WILL_FIRE_RL_scemi_output_mr_decode_beat;
  tUInt8 DEF_CAN_FIRE_RL_scemi_output_mr_decode_beat;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dispatch_scemi2_credit_msg_in;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dispatch_scemi2_credit_msg_in;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dispatch_scemi2_data_msg_in;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dispatch_scemi2_data_msg_in;
  tUInt8 DEF_WILL_FIRE_RL_scemi_record_scemi2_msg_len;
  tUInt8 DEF_CAN_FIRE_RL_scemi_record_scemi2_msg_len;
  tUInt8 DEF_WILL_FIRE_RL_scemi_move_to_next_ack;
  tUInt8 DEF_CAN_FIRE_RL_scemi_move_to_next_ack;
  tUInt8 DEF_WILL_FIRE_RL_scemi_ack_output_data2;
  tUInt8 DEF_CAN_FIRE_RL_scemi_ack_output_data2;
  tUInt8 DEF_WILL_FIRE_RL_scemi_ack_output_data1;
  tUInt8 DEF_CAN_FIRE_RL_scemi_ack_output_data1;
  tUInt8 DEF_WILL_FIRE_RL_scemi_pass_input_data;
  tUInt8 DEF_CAN_FIRE_RL_scemi_pass_input_data;
  tUInt8 DEF_WILL_FIRE_RL_scemi_drop_scemi1_msg;
  tUInt8 DEF_CAN_FIRE_RL_scemi_drop_scemi1_msg;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dispatch_scemi1_msg_in;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dispatch_scemi1_msg_in;
  tUInt8 DEF_WILL_FIRE_RL_scemi_record_scemi1_msg_len;
  tUInt8 DEF_CAN_FIRE_RL_scemi_record_scemi1_msg_len;
  tUInt8 DEF_WILL_FIRE_RL_scemi_rest_of_msg;
  tUInt8 DEF_CAN_FIRE_RL_scemi_rest_of_msg;
  tUInt8 DEF_WILL_FIRE_RL_scemi_start_of_msg;
  tUInt8 DEF_CAN_FIRE_RL_scemi_start_of_msg;
  tUInt8 DEF_WILL_FIRE_RL_scemi_pass_beat_from_bridge;
  tUInt8 DEF_CAN_FIRE_RL_scemi_pass_beat_from_bridge;
  tUInt8 DEF_WILL_FIRE_RL_scemi_bridge_mr_detect_last_beat;
  tUInt8 DEF_CAN_FIRE_RL_scemi_bridge_mr_detect_last_beat;
  tUInt8 DEF_WILL_FIRE_RL_scemi_bridge_mr_decode_beat;
  tUInt8 DEF_CAN_FIRE_RL_scemi_bridge_mr_decode_beat;
  tUInt8 DEF_WILL_FIRE_RL_scemi_clockGenerators_incr_cycle_stamp;
  tUInt8 DEF_CAN_FIRE_RL_scemi_clockGenerators_incr_cycle_stamp;
  tUInt8 DEF_WILL_FIRE_RL_scemi_clockGenerators_stall_one_to_one_cclock;
  tUInt8 DEF_CAN_FIRE_RL_scemi_clockGenerators_stall_one_to_one_cclock;
  tUInt8 DEF_WILL_FIRE_RL_scemi_clockGenerators_track_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_clockGenerators_track_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_clockGenerators_one_to_one_cclock_incr;
  tUInt8 DEF_CAN_FIRE_RL_scemi_clockGenerators_one_to_one_cclock_incr;
  tUInt8 DEF_WILL_FIRE_RL_scemi_clockGenerators_handle_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_clockGenerators_handle_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_clockGenerators_clock_gens_do_ticks;
  tUInt8 DEF_CAN_FIRE_RL_scemi_clockGenerators_clock_gens_do_ticks;
  tUInt8 DEF_WILL_FIRE_RL_scemi_clockGenerators_clock_gens_update_stalled;
  tUInt8 DEF_CAN_FIRE_RL_scemi_clockGenerators_clock_gens_update_stalled;
  tUInt8 DEF_WILL_FIRE_RL_scemi_clockGenerators_clock_gens_do_stall_scemi;
  tUInt8 DEF_CAN_FIRE_RL_scemi_clockGenerators_clock_gens_do_stall_scemi;
  tUInt8 DEF_WILL_FIRE_RL_scemi_clockGenerators_clock_gens_is_allowed_sync_clock_domain_crossing;
  tUInt8 DEF_CAN_FIRE_RL_scemi_clockGenerators_clock_gens_is_allowed_sync_clock_domain_crossing;
  tUInt8 DEF_WILL_FIRE_RL_scemi_clockGenerators_clock_gens_manage_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_clockGenerators_clock_gens_manage_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_clockGenerators_clock_gens_tick_clock;
  tUInt8 DEF_CAN_FIRE_RL_scemi_clockGenerators_clock_gens_tick_clock;
  tUInt8 DEF_WILL_FIRE_RL_scemi_clockGenerators_clock_gens_counters_do_stall;
  tUInt8 DEF_CAN_FIRE_RL_scemi_clockGenerators_clock_gens_counters_do_stall;
  tUInt8 DEF_WILL_FIRE_RL_scemi_clockGenerators_clock_gens_counters_incr;
  tUInt8 DEF_CAN_FIRE_RL_scemi_clockGenerators_clock_gens_counters_incr;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_shutdown;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_shutdown;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_ack;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_ack;
  tUInt8 DEF_WILL_FIRE_RL_scemi_rsa_result_connect_res_mkConnectionGetPut;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_resp_connect_res_mkConnectionGetPut;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_receiveFirstData;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_sendAck;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_respondToPing;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_receiveMoreData;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_receiveTrigger;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_request;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_request;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_ctrl_out_handle_scemi_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_ctrl_out_handle_scemi_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_ctrl_out_setOK;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_ctrl_out_setOK;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_ctrl_out_update_count;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_ctrl_out_update_count;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_ctrl_out_complete_reset_sequence;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_ctrl_out_complete_reset_sequence;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_ctrl_out_initiate_reset_sequence;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_ctrl_out_initiate_reset_sequence;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_ctrl_out_detect_end_of_scemi_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_ctrl_out_detect_end_of_scemi_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_ctrl_out_detect_scemi_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_ctrl_out_detect_scemi_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_ctrl_out_deassert_after_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_ctrl_out_deassert_after_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_ctrl_in_receive;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_ctrl_in_receive;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_ctrl_in_receive_ready;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_ctrl_in_receive_ready;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_ctrl_in_dataF_rule_deq;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_ctrl_in_dataF_rule_deq;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_ctrl_in_dataF_rule_enq;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_ctrl_in_dataF_rule_enq;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_ctrl_in_requestF_rule_update_final;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_ctrl_in_requestF_rule_update_final;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_ctrl_in_update_remaining;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_ctrl_in_update_remaining;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_ctrl_in_handle_scemi_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_ctrl_in_handle_scemi_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_ctrl_in_port_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_ctrl_in_port_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_ctrl_in_read_complete;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_ctrl_in_read_complete;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_ctrl_in_data_ready;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_ctrl_in_data_ready;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_ctrl_in_first_request;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_ctrl_in_first_request;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_ctrl_in_complete_reset_sequence;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_ctrl_in_complete_reset_sequence;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_ctrl_in_initiate_reset_sequence;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_ctrl_in_initiate_reset_sequence;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_ctrl_in_detect_end_of_scemi_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_ctrl_in_detect_end_of_scemi_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_ctrl_in_detect_scemi_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_ctrl_in_detect_scemi_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_shutdown_ctrl_in_deassert_after_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_shutdown_ctrl_in_deassert_after_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_rsa_result_connect_get_mkConnectionGetPut;
  tUInt8 DEF_CAN_FIRE_RL_scemi_rsa_result_connect_get_mkConnectionGetPut;
  tUInt8 DEF_CAN_FIRE_RL_scemi_rsa_result_connect_res_mkConnectionGetPut;
  tUInt8 DEF_WILL_FIRE_RL_scemi_rsa_result_outport_handle_scemi_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_rsa_result_outport_handle_scemi_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_rsa_result_outport_setOK;
  tUInt8 DEF_CAN_FIRE_RL_scemi_rsa_result_outport_setOK;
  tUInt8 DEF_WILL_FIRE_RL_scemi_rsa_result_outport_update_count;
  tUInt8 DEF_CAN_FIRE_RL_scemi_rsa_result_outport_update_count;
  tUInt8 DEF_WILL_FIRE_RL_scemi_rsa_result_outport_complete_reset_sequence;
  tUInt8 DEF_CAN_FIRE_RL_scemi_rsa_result_outport_complete_reset_sequence;
  tUInt8 DEF_WILL_FIRE_RL_scemi_rsa_result_outport_initiate_reset_sequence;
  tUInt8 DEF_CAN_FIRE_RL_scemi_rsa_result_outport_initiate_reset_sequence;
  tUInt8 DEF_WILL_FIRE_RL_scemi_rsa_result_outport_detect_end_of_scemi_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_rsa_result_outport_detect_end_of_scemi_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_rsa_result_outport_detect_scemi_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_rsa_result_outport_detect_scemi_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_rsa_result_outport_deassert_after_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_rsa_result_outport_deassert_after_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_mem_request;
  tUInt8 DEF_CAN_FIRE_RL_scemi_mem_request;
  tUInt8 DEF_WILL_FIRE_RL_scemi_mem_connect_put_mkConnectionGetPut;
  tUInt8 DEF_CAN_FIRE_RL_scemi_mem_connect_put_mkConnectionGetPut;
  tUInt8 DEF_WILL_FIRE_RL_scemi_mem_connect_res_mkConnectionGetPut;
  tUInt8 DEF_CAN_FIRE_RL_scemi_mem_connect_res_mkConnectionGetPut;
  tUInt8 DEF_WILL_FIRE_RL_scemi_mem_inport_receive;
  tUInt8 DEF_CAN_FIRE_RL_scemi_mem_inport_receive;
  tUInt8 DEF_WILL_FIRE_RL_scemi_mem_inport_receive_ready;
  tUInt8 DEF_CAN_FIRE_RL_scemi_mem_inport_receive_ready;
  tUInt8 DEF_WILL_FIRE_RL_scemi_mem_inport_dataF_rule_deq;
  tUInt8 DEF_CAN_FIRE_RL_scemi_mem_inport_dataF_rule_deq;
  tUInt8 DEF_WILL_FIRE_RL_scemi_mem_inport_dataF_rule_enq;
  tUInt8 DEF_CAN_FIRE_RL_scemi_mem_inport_dataF_rule_enq;
  tUInt8 DEF_WILL_FIRE_RL_scemi_mem_inport_requestF_rule_update_final;
  tUInt8 DEF_CAN_FIRE_RL_scemi_mem_inport_requestF_rule_update_final;
  tUInt8 DEF_WILL_FIRE_RL_scemi_mem_inport_update_remaining;
  tUInt8 DEF_CAN_FIRE_RL_scemi_mem_inport_update_remaining;
  tUInt8 DEF_WILL_FIRE_RL_scemi_mem_inport_handle_scemi_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_mem_inport_handle_scemi_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_mem_inport_port_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_mem_inport_port_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_mem_inport_read_complete;
  tUInt8 DEF_CAN_FIRE_RL_scemi_mem_inport_read_complete;
  tUInt8 DEF_WILL_FIRE_RL_scemi_mem_inport_data_ready;
  tUInt8 DEF_CAN_FIRE_RL_scemi_mem_inport_data_ready;
  tUInt8 DEF_WILL_FIRE_RL_scemi_mem_inport_first_request;
  tUInt8 DEF_CAN_FIRE_RL_scemi_mem_inport_first_request;
  tUInt8 DEF_WILL_FIRE_RL_scemi_mem_inport_complete_reset_sequence;
  tUInt8 DEF_CAN_FIRE_RL_scemi_mem_inport_complete_reset_sequence;
  tUInt8 DEF_WILL_FIRE_RL_scemi_mem_inport_initiate_reset_sequence;
  tUInt8 DEF_CAN_FIRE_RL_scemi_mem_inport_initiate_reset_sequence;
  tUInt8 DEF_WILL_FIRE_RL_scemi_mem_inport_detect_end_of_scemi_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_mem_inport_detect_end_of_scemi_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_mem_inport_detect_scemi_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_mem_inport_detect_scemi_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_mem_inport_deassert_after_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_mem_inport_deassert_after_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_resp_connect_get_mkConnectionGetPut;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_resp_connect_get_mkConnectionGetPut;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_resp_connect_res_mkConnectionGetPut;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_resp_outport_handle_scemi_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_resp_outport_handle_scemi_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_resp_outport_setOK;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_resp_outport_setOK;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_resp_outport_update_count;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_resp_outport_update_count;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_resp_outport_complete_reset_sequence;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_resp_outport_complete_reset_sequence;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_resp_outport_initiate_reset_sequence;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_resp_outport_initiate_reset_sequence;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_resp_outport_detect_end_of_scemi_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_resp_outport_detect_end_of_scemi_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_resp_outport_detect_scemi_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_resp_outport_detect_scemi_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_resp_outport_deassert_after_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_resp_outport_deassert_after_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_req_request;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_req_request;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_req_connect_put_mkConnectionGetPut;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_req_connect_put_mkConnectionGetPut;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_req_connect_res_mkConnectionGetPut;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_req_connect_res_mkConnectionGetPut;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_req_inport_receive;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_req_inport_receive;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_req_inport_receive_ready;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_req_inport_receive_ready;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_req_inport_dataF_rule_deq;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_req_inport_dataF_rule_deq;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_req_inport_dataF_rule_enq;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_req_inport_dataF_rule_enq;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_req_inport_requestF_rule_update_final;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_req_inport_requestF_rule_update_final;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_req_inport_update_remaining;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_req_inport_update_remaining;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_req_inport_handle_scemi_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_req_inport_handle_scemi_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_req_inport_port_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_req_inport_port_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_req_inport_read_complete;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_req_inport_read_complete;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_req_inport_data_ready;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_req_inport_data_ready;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_req_inport_first_request;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_req_inport_first_request;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_req_inport_complete_reset_sequence;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_req_inport_complete_reset_sequence;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_req_inport_initiate_reset_sequence;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_req_inport_initiate_reset_sequence;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_req_inport_detect_end_of_scemi_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_req_inport_detect_end_of_scemi_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_req_inport_detect_scemi_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_req_inport_detect_scemi_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_softrst_req_inport_deassert_after_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_softrst_req_inport_deassert_after_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_dutIfc_donerest;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_dutIfc_donerest;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_sendAck;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_respondToPing;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_receiveMoreData;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_receiveFirstData;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_receiveTrigger;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_unsetFlag;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_setSample;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_prb_str_recv_doEnq;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_prb_str_recv_doEnq;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_receiveControl;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_receiveControl;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_requestInput;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_requestInput;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_send_en;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_send_en;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_unsetFlag;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_flagSample;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_flagSample;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_setSample;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_control_in_receive;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_control_in_receive;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_control_in_receive_ready;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_control_in_receive_ready;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_control_in_dataF_rule_deq;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_control_in_dataF_rule_deq;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_control_in_dataF_rule_enq;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_control_in_dataF_rule_enq;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_control_in_requestF_rule_update_final;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_control_in_requestF_rule_update_final;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_control_in_update_remaining;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_control_in_update_remaining;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_control_in_handle_scemi_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_control_in_handle_scemi_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_control_in_port_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_control_in_port_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_control_in_read_complete;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_control_in_read_complete;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_control_in_data_ready;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_control_in_data_ready;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_control_in_first_request;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_control_in_first_request;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_control_in_complete_reset_sequence;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_control_in_complete_reset_sequence;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_control_in_initiate_reset_sequence;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_control_in_initiate_reset_sequence;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_control_in_detect_end_of_scemi_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_control_in_detect_end_of_scemi_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_control_in_detect_scemi_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_control_in_detect_scemi_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_control_in_deassert_after_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_control_in_deassert_after_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_data_out_handle_scemi_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_data_out_handle_scemi_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_data_out_setOK;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_data_out_setOK;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_data_out_update_count;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_data_out_update_count;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_data_out_complete_reset_sequence;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_data_out_complete_reset_sequence;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_data_out_initiate_reset_sequence;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_data_out_initiate_reset_sequence;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_data_out_detect_end_of_scemi_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_data_out_detect_end_of_scemi_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_data_out_detect_scemi_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_data_out_detect_scemi_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_dut_dut_prb_control_data_out_deassert_after_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_dut_dut_prb_control_data_out_deassert_after_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_clk_port_rstgen_trigger;
  tUInt8 DEF_CAN_FIRE_RL_scemi_clk_port_rstgen_trigger;
  tUInt8 DEF_WILL_FIRE_RL_scemi_init_state_track_reset;
  tUInt8 DEF_CAN_FIRE_RL_scemi_init_state_track_reset;
  tUInt8 DEF_WILL_FIRE_RL_scemi_rstgen_trigger;
  tUInt8 DEF_CAN_FIRE_RL_scemi_rstgen_trigger;
  tUInt8 DEF_WILL_FIRE_RL_scemi_toggle_uclock;
  tUInt8 DEF_CAN_FIRE_RL_scemi_toggle_uclock;
  tUInt8 DEF_WILL_FIRE_RL_scemi_open_port;
  tUInt8 DEF_CAN_FIRE_RL_scemi_open_port;
  tUInt8 DEF_WILL_FIRE_RL_scemi_bridge_close_socket;
  tUInt8 DEF_CAN_FIRE_RL_scemi_bridge_close_socket;
  tUInt8 DEF_WILL_FIRE_RL_scemi_bridge_got_full_beat_from_tcp;
  tUInt8 DEF_CAN_FIRE_RL_scemi_bridge_got_full_beat_from_tcp;
  tUInt8 DEF_WILL_FIRE_RL_scemi_bridge_clear_beat_buffer;
  tUInt8 DEF_CAN_FIRE_RL_scemi_bridge_clear_beat_buffer;
  tUInt8 DEF_WILL_FIRE_RL_scemi_bridge_recv_beat_from_tcp;
  tUInt8 DEF_CAN_FIRE_RL_scemi_bridge_recv_beat_from_tcp;
  tUInt8 DEF_WILL_FIRE_RL_scemi_bridge_send_beat_to_tcp;
  tUInt8 DEF_CAN_FIRE_RL_scemi_bridge_send_beat_to_tcp;
  tUInt8 DEF_WILL_FIRE_RL_scemi_bridge_capture_incoming_beat;
  tUInt8 DEF_CAN_FIRE_RL_scemi_bridge_capture_incoming_beat;
  tUInt8 DEF_scemi_clockGenerators_clock_gens_in_reset_pw_w_ETC___d1372;
  tUInt8 DEF_NOT_scemi_dut_dut_prb_control_prb_str_notEmpty_ETC___d1371;
  tUInt8 DEF_NOT_scemi_clockGenerators_clock_gens_counters__ETC___d812;
  tUInt8 DEF_scemi_shutdown_ctrl_out_in_reset_uclk___d1368;
  tUInt8 DEF_scemi_shutdown_ctrl_in_in_reset_uclk___d1363;
  tUInt8 DEF_scemi_rsa_result_outport_in_reset_uclk___d1361;
  tUInt8 DEF_scemi_mem_inport_in_reset_uclk___d1354;
  tUInt8 DEF_scemi_dut_softrst_resp_outport_in_reset_uclk___d1352;
  tUInt8 DEF_scemi_dut_softrst_req_inport_in_reset_uclk___d1347;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_in_reset__ETC___d1340;
  tUInt8 DEF_scemi_dut_dut_prb_control_data_out_in_reset_uclk___d1338;
  tUInt8 DEF_scemi_shutdown_ctrl_in_remaining__h49918;
  tUInt32 DEF_b__h49426;
  tUInt8 DEF_b__h29421;
  tUInt8 DEF_scemi_dut_softrst_req_inport_remaining__h49894;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_remaining__h49880;
  tUInt8 DEF_b__h47193;
  tUInt8 DEF_x__h47323;
  tUInt32 DEF_b__h41724;
  tUInt8 DEF_scemi_shutdown_ctrl_in_got_word_pw_whas____d1438;
  tUInt8 DEF_scemi_dut_softrst_req_inport_got_word_pw_whas____d1430;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_got_word__ETC___d1427;
  tUInt8 DEF_scemi_output_mr_header_pos_069_EQ_0___d1070;
  tUInt8 DEF_scemi_bridge_mr_header_pos_81_EQ_0___d882;
  tUInt64 DEF_b__h13012;
  tUInt64 DEF_scemi_mem_inport_dataF_taggedReg___d1469;
  tUInt32 DEF_scemi_scemi2_msgs_in_first____d1326;
  tUInt32 DEF_b__h43389;
  tUInt32 DEF_b__h42271;
  tUInt32 DEF_x__h17488;
  tUInt32 DEF_scemi_bridge_fd__h921;
  tUInt32 DEF_ab__h48501;
  tUInt32 DEF_scemi_dut_dut_prb_control_control_in_dataF_tag_ETC___d1467;
  tUInt32 DEF_scemi_dut_dut_prb_control_control_in_dataF_rw__ETC___d1506;
  tUInt32 DEF_b__h16104;
  tUInt32 DEF_b__h16540;
  tUInt32 DEF_b__h54512;
  tUInt32 DEF_scemi_scemi2_msg_len___d1472;
  tUInt32 DEF_scemi_scemi1_msg_len___d1471;
  tUInt32 DEF_b__h45797;
  tUInt8 DEF_scemi_dut_dut_prb_control_sampleIntervalV_3__h12744;
  tUInt8 DEF_scemi_dut_dut_prb_control_sampleIntervalV_2__h12810;
  tUInt8 DEF_scemi_dut_dut_prb_control_sampleIntervalV_1__h12877;
  tUInt8 DEF_scemi_dut_dut_prb_control_sampleIntervalV__h12944;
  tUInt8 DEF_b__h536;
  tUInt8 DEF_b__h659;
  tUInt8 DEF_b__h53313;
  tUInt8 DEF_b__h44598;
  tUInt8 DEF_ab__h42795;
  tUInt8 DEF_scemi_shutdown_ctrl_in_dataF_taggedReg___d1470;
  tUInt8 DEF_scemi_dut_softrst_req_inport_dataF_taggedReg___d1468;
  tUInt8 DEF_scemi_active_requests_3__h57872;
  tUInt8 DEF_scemi_active_requests_2__h57845;
  tUInt8 DEF_scemi_active_requests_1__h57818;
  tUInt8 DEF_scemi_req_msg_grant__h59347;
  tUInt8 DEF_scemi_output_mr_last_beat_pw_whas____d1380;
  tUInt8 DEF_scemi_output_mr_new_remaining_whas____d1421;
  tUInt8 DEF_scemi_next_out_msg_scemi1__h54624;
  tUInt8 DEF_scemi_scemi2_msgs_out_notEmpty____d1379;
  tUInt8 DEF_scemi_scemi1_msgs_out_notEmpty____d1377;
  tUInt8 DEF_scemi_bridge_mr_new_remaining_whas____d1419;
  tUInt8 DEF_scemi_clockGenerators_clock_gens_out_of_reset_reg__h42282;
  tUInt8 DEF_scemi_shutdown_ctrl_out_decr_whas____d1441;
  tUInt8 DEF_scemi_shutdown_ctrl_in_dataF_rw_enq_whas____d1416;
  tUInt8 DEF_scemi_shutdown_ctrl_in_dataF_rw_enq_wget____d1454;
  tUInt8 DEF_scemi_shutdown_ctrl_in_requestF_rw_enq_whas____d1555;
  tUInt8 DEF_scemi_shutdown_ctrl_in_next_sp_pulse____d1439;
  tUInt8 DEF_scemi_rsa_result_outport_decr_whas____d1437;
  tUInt8 DEF_scemi_mem_inport_dataF_rw_enq_whas____d1414;
  tUInt8 DEF_scemi_mem_inport_requestF_rw_enq_whas____d1551;
  tUInt8 DEF_scemi_mem_inport_got_word_pw_whas____d1434;
  tUInt8 DEF_scemi_mem_inport_next_sp_pulse____d1435;
  tUInt8 DEF_scemi_dut_softrst_resp_outport_decr_whas____d1433;
  tUInt8 DEF_scemi_dut_softrst_req_inport_dataF_rw_enq_whas____d1412;
  tUInt8 DEF_scemi_dut_softrst_req_inport_requestF_rw_enq_w_ETC___d1550;
  tUInt8 DEF_scemi_dut_softrst_req_inport_next_sp_pulse____d1431;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_dataF_rw__ETC___d1403;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_requestF__ETC___d1549;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_next_sp_p_ETC___d1428;
  tUInt8 DEF_scemi_dut_dut_prb_control_data_out_decr_whas____d1426;
  tUInt32 DEF_scemi_dut_dut_prb_control_control_in_dataF_tag_ETC___d1513;
  tUInt32 DEF_scemi_dut_dut_prb_control_control_in_dataF_rw__ETC___d1457;
  tUInt32 DEF_b__h50598;
  tUInt32 DEF_ab_BITS_9_TO_0___h50983;
  tUInt32 DEF_scemi_dut_dut_prb_control_control_in_dataF_tag_ETC___d1512;
  tUInt32 DEF_IF_scemi_dut_dut_prb_control_control_in_dataF__ETC___d1475;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_dataF_tag_ETC___d1397;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_dataF_rw__ETC___d1384;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_dataF_tag_ETC___d1544;
  tUInt8 DEF_scemi_mem_inport_dataF_taggedReg_33_BIT_33___d1359;
  tUInt8 DEF_scemi_bridge_fd_BIT_31___h63619;
  tUInt8 DEF_ab_BIT_10___h48561;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_dataF_tag_ETC___d1345;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_dataF_tag_ETC___d1545;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_dataF_tag_ETC___d1390;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_dataF_rw__ETC___d1462;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_dataF_rw__ETC___d1342;
  tUInt8 DEF_scemi_scemi1_msg_len_36_BIT_8___d1373;
  tUInt8 DEF_ab_BIT_1___h42801;
  tUInt8 DEF_scemi_shutdown_ctrl_in_dataF_taggedReg_61_BIT_1___d1367;
  tUInt8 DEF_scemi_shutdown_ctrl_in_dataF_taggedReg_61_BIT_0___d1542;
  tUInt8 DEF_scemi_dut_softrst_req_inport_dataF_taggedReg_2_ETC___d1351;
  tUInt8 DEF_IF_scemi_dut_dut_prb_control_control_in_dataF__ETC___d1407;
  tUInt8 DEF_IF_scemi_dut_dut_prb_control_control_in_dataF__ETC___d1405;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_dataF_rw__ETC___d1383;
  tUInt32 DEF_IF_scemi_dut_dut_prb_control_control_in_dataF__ETC___d1459;
  tUInt8 DEF_IF_scemi_dut_dut_prb_control_control_in_dataF__ETC___d1406;
  tUInt8 DEF_scemi_init_state_out_port_87_EQ_3___d799;
  tUInt8 DEF_scemi_bridge_mr_opcode_w_wget__07_EQ_0b101010___d1481;
  tUInt8 DEF_scemi_bridge_mr_opcode_w_wget__07_EQ_0b101011___d1482;
  tUInt8 DEF_scemi_ports_to_ack_48_BITS_9_TO_0_022_EQ_0___d1491;
  tUInt8 DEF_scemi_ports_to_ack_48_BITS_9_TO_0_022_EQ_1___d1492;
  tUInt8 DEF_scemi_ports_to_ack_48_BITS_9_TO_0_022_EQ_2___d1493;
  tUInt8 DEF_scemi_ports_to_ack_48_BITS_20_TO_11_006_EQ_0___d1487;
  tUInt8 DEF_scemi_ports_to_ack_48_BITS_20_TO_11_006_EQ_1___d1488;
  tUInt8 DEF_scemi_ports_to_ack_48_BITS_20_TO_11_006_EQ_2___d1489;
  tUInt8 DEF_scemi_input_port_target_88_EQ_0___d1483;
  tUInt8 DEF_scemi_input_port_target_88_EQ_1___d1484;
  tUInt8 DEF_scemi_input_port_target_88_EQ_2___d1485;
  tUInt8 DEF_NOT_scemi_mem_inport_remaining_04_EQ_0_92___d1568;
  tUInt8 DEF_scemi_input_port_target_88_EQ_3___d1486;
  tUInt8 DEF_scemi_scemi_msg_version_16_EQ_1___d1479;
  tUInt8 DEF_NOT_scemi_dut_dut_prb_control_control_in_dataF_ETC___d1546;
  tUInt8 DEF_NOT_scemi_dut_dut_prb_control_control_in_dataF_ETC___d1558;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_dataF_rw__ETC___d1385;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_dataF_rw__ETC___d1382;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_dataF_rw__ETC___d1389;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_dataF_rw__ETC___d1388;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_dataF_rw__ETC___d1387;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_dataF_rw__ETC___d1386;
  tUInt8 DEF_scemi_clockGenerators_clock_gens_counters_coun_ETC___d1418;
  tUInt32 DEF_scemi_dut_dut_prb_control_sampleIntervalV_3_62_ETC___d1461;
  tUInt8 DEF_IF_scemi_dut_dut_prb_control_control_in_dataF__ETC___d225;
  tUInt8 DEF_scemi_ports_to_ack_48_BITS_9_TO_0_022_EQ_3___d1494;
  tUInt8 DEF_scemi_ports_to_ack_48_BITS_20_TO_11_006_EQ_3___d1490;
  tUInt8 DEF_IF_scemi_dut_dut_prb_control_control_in_dataF__ETC___d1563;
  tUInt8 DEF_scemi_bridge_nbytes_to_tcp_EQ_0___d4;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_dataF_tag_ETC___d1543;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_dataF_tag_ETC___d1396;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_dataF_tag_ETC___d1395;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_dataF_tag_ETC___d1394;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_dataF_tag_ETC___d1393;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_dataF_tag_ETC___d1392;
  tUInt8 DEF_scemi_dut_dut_prb_control_control_in_dataF_tag_ETC___d1391;
  tUInt8 DEF_scemi_scemi_msg_version_16_EQ_2___d1480;
  tUInt8 DEF_scemi_mem_inport_remaining_04_EQ_1___d1476;
  tUInt8 DEF_IF_scemi_dut_dut_prb_control_control_in_dataF__ETC___d1408;
  tUInt8 DEF_NOT_scemi_mem_inport_dataF_taggedReg_33_BIT_33_34___d635;
  tUInt8 DEF_IF_scemi_dut_dut_prb_control_control_in_dataF__ETC___d226;
  tUInt8 DEF_IF_scemi_dut_dut_prb_control_control_in_dataF__ETC___d1409;
  tUInt8 DEF_NOT_scemi_dut_dut_prb_control_control_in_dataF_ETC___d1560;
  tUInt8 DEF_NOT_scemi_dut_dut_prb_control_control_in_dataF_ETC___d1559;
  tUInt8 DEF_NOT_scemi_req_msg_grant_159___d1191;
  tUInt8 DEF_NOT_scemi_next_out_msg_scemi1_094___d1378;
  tUInt8 DEF_NOT_scemi_clockGenerators_clock_gens_is_allowe_ETC___d847;
  tUInt8 DEF_NOT_scemi_dut_dut_prb_control_sampleIntervalV__ETC___d169;
  tUInt8 DEF_NOT_scemi_bridge_fd_BIT_31_4___d15;
 
 /* Local definitions */
 private:
  tUInt8 DEF_scemi_shutdown_ctrl_out_count__h62739;
  tUInt8 DEF_scemi_rsa_result_outport_count__h62668;
  tUInt8 DEF_scemi_dut_softrst_resp_outport_count__h62597;
  tUInt8 DEF_scemi_dut_dut_prb_control_data_out_count__h62526;
  tUInt32 DEF_b__h59360;
  tUInt8 DEF_scemi_output_mr_last_beat_pw_whas__107_OR_NOT__ETC___d1109;
  tUInt8 DEF_NOT_scemi_output_mr_header_pos_069_EQ_4_083___d1108;
  tUInt8 DEF_scemi_bridge_mr_last_beat_pw_whas__20_OR_NOT_s_ETC___d925;
  tUInt8 DEF_NOT_scemi_bridge_mr_header_pos_81_EQ_4_95___d924;
  tUInt8 DEF_scemi_output_mr_header_pos_069_EQ_4___d1083;
  tUInt8 DEF_scemi_bridge_mr_header_pos_81_EQ_4___d895;
  tUWide DEF_ab__h686;
  tUInt32 DEF_b__h947;
  tUInt8 DEF_b__h606;
  tUWide DEF_ab__h60836;
  tUInt64 DEF_scemi_mem_inport_dataF_rw_enq_wget____d1522;
  tUInt32 DEF_scemi_scemi1_msgs_in_first____d1324;
  tUInt32 DEF_x__h47734;
  tUInt32 DEF_v__h63523;
  tUInt32 DEF_spliced_bits__h59832;
  tUInt8 DEF_scemi_pending_requests_3__h58202;
  tUInt8 DEF_scemi_pending_requests_2__h58112;
  tUInt8 DEF_scemi_pending_requests_1__h58031;
  tUInt8 DEF_scemi_pending_requests__h57959;
  tUInt8 DEF_scemi_bridge_mr_last_beat_pw_whas____d1523;
  tUInt8 DEF_scemi_dut_softrst_req_inport_dataF_rw_enq_wget____d1453;
  tUInt8 DEF_scemi_bridge_beat_from_tcp_ready_whas____d1425;
  tUInt32 DEF_scemi_mem_inport_dataF_rw_enq_wget__26_BITS_31_ETC___d1444;
  tUInt32 DEF_scemi_scemi1_msgs_in_first__43_BITS_25_TO_16___d1540;
  tUInt32 DEF_scemi_scemi1_msgs_in_first__43_BITS_9_TO_0___d1445;
  tUInt8 DEF_b__h48875;
  tUInt8 DEF_scemi_mem_inport_dataF_rw_enq_wget__26_BIT_32___d1356;
  tUInt8 DEF_scemi_scemi1_msgs_in_first__43_BIT_26___d1538;
  tUInt8 DEF_scemi_scemi1_msgs_in_first__43_BIT_10___d1539;
  tUInt8 DEF_scemi_msg_pos_162_EQ_0___d1495;
  tUInt8 DEF_scemi_clockGenerators_clock_gens_counters_coun_ETC___d1417;
  tUInt8 DEF_scemi_scemi1_msg_len_36_BITS_7_TO_0_65_ULE_4___d1541;
  tUInt8 DEF_scemi_scemi1_msg_len_36_BITS_7_TO_0_65_MINUS_4___d1562;
  tUInt8 DEF_IF_scemi_output_mr_last_beat_pw_whas__107_THEN_ETC___d1574;
  tUInt8 DEF_IF_scemi_bridge_mr_last_beat_pw_whas__20_THEN__ETC___d1572;
  tUWide DEF__0_CONCAT_scemi_bridge_beat_to_tcp_0___d1332;
  tUWide DEF__0_CONCAT_scemi_bridge_beat_from_tcp_9___d1333;
  tUWide DEF_scemi_init_state_cycle_stamp_crossed__70_CONCAT_3___d808;
  tUWide DEF_scemi_init_state_cycle_stamp_crossed__70_CONCAT_2___d706;
  tUWide DEF_scemi_init_state_cycle_stamp_crossed__70_CONCAT_1___d573;
  tUWide DEF_scemi_init_state_cycle_stamp_crossed__70_CONCAT_0___d1463;
  tUInt32 DEF__0_CONCAT_DONTCARE___d1448;
  tUInt32 DEF_scemi_scemi1_msgs_in_first__43_BIT_26_68_CONCA_ETC___d1466;
  tUInt32 DEF_NOT_scemi_scemi1_msg_len_36_BITS_7_TO_0_65_ULE_ETC___d1573;
  tUInt8 DEF_NOT_scemi_scemi1_msg_len_36_BITS_7_TO_0_65_ULE_ETC___d1374;
  tUInt8 DEF__0_CONCAT_DONTCARE___d1446;
  tUInt8 DEF_NOT_scemi_msg_pos_162_EQ_0_163___d1165;
  tUInt8 DEF_scemi_scemi1_msg_len_36_BIT_8_37_AND_scemi_sce_ETC___d982;
  tUInt64 DEF_scemi_init_state_cycle_stamp_crossed__70_PLUS__ETC___d1334;
 
 /* Rules */
 public:
  void RL_scemi_bridge_capture_incoming_beat();
  void RL_scemi_bridge_send_beat_to_tcp();
  void RL_scemi_bridge_recv_beat_from_tcp();
  void RL_scemi_bridge_clear_beat_buffer();
  void RL_scemi_bridge_got_full_beat_from_tcp();
  void RL_scemi_bridge_close_socket();
  void RL_scemi_open_port();
  void RL_scemi_toggle_uclock();
  void RL_scemi_init_state_track_reset();
  void RL_scemi_dut_dut_prb_control_data_out_initiate_reset_sequence();
  void RL_scemi_dut_dut_prb_control_data_out_complete_reset_sequence();
  void RL_scemi_dut_dut_prb_control_data_out_update_count();
  void RL_scemi_dut_dut_prb_control_data_out_handle_scemi_reset();
  void RL_scemi_dut_dut_prb_control_control_in_initiate_reset_sequence();
  void RL_scemi_dut_dut_prb_control_control_in_complete_reset_sequence();
  void RL_scemi_dut_dut_prb_control_control_in_handle_scemi_reset();
  void RL_scemi_dut_dut_prb_control_control_in_update_remaining();
  void RL_scemi_dut_softrst_req_inport_initiate_reset_sequence();
  void RL_scemi_dut_softrst_req_inport_complete_reset_sequence();
  void RL_scemi_dut_softrst_req_inport_handle_scemi_reset();
  void RL_scemi_dut_softrst_req_inport_update_remaining();
  void RL_scemi_dut_softrst_resp_outport_initiate_reset_sequence();
  void RL_scemi_dut_softrst_resp_outport_complete_reset_sequence();
  void RL_scemi_dut_softrst_resp_outport_update_count();
  void RL_scemi_dut_softrst_resp_outport_handle_scemi_reset();
  void RL_scemi_mem_inport_initiate_reset_sequence();
  void RL_scemi_mem_inport_complete_reset_sequence();
  void RL_scemi_mem_inport_handle_scemi_reset();
  void RL_scemi_mem_inport_update_remaining();
  void RL_scemi_rsa_result_outport_initiate_reset_sequence();
  void RL_scemi_rsa_result_outport_complete_reset_sequence();
  void RL_scemi_rsa_result_outport_update_count();
  void RL_scemi_rsa_result_outport_handle_scemi_reset();
  void RL_scemi_shutdown_ctrl_in_initiate_reset_sequence();
  void RL_scemi_shutdown_ctrl_in_complete_reset_sequence();
  void RL_scemi_shutdown_ctrl_in_handle_scemi_reset();
  void RL_scemi_shutdown_ctrl_in_update_remaining();
  void RL_scemi_shutdown_ctrl_out_initiate_reset_sequence();
  void RL_scemi_shutdown_ctrl_out_complete_reset_sequence();
  void RL_scemi_shutdown_ctrl_out_update_count();
  void RL_scemi_shutdown_ctrl_out_handle_scemi_reset();
  void RL_scemi_clockGenerators_clock_gens_counters_incr();
  void RL_scemi_clockGenerators_clock_gens_counters_do_stall();
  void RL_scemi_clockGenerators_clock_gens_tick_clock();
  void RL_scemi_clockGenerators_clock_gens_manage_reset();
  void RL_scemi_clockGenerators_clock_gens_do_stall_scemi();
  void RL_scemi_clockGenerators_clock_gens_update_stalled();
  void RL_scemi_clockGenerators_handle_reset();
  void RL_scemi_clockGenerators_one_to_one_cclock_incr();
  void RL_scemi_clockGenerators_track_reset();
  void RL_scemi_clockGenerators_stall_one_to_one_cclock();
  void RL_scemi_clockGenerators_incr_cycle_stamp();
  void RL_scemi_bridge_mr_decode_beat();
  void RL_scemi_bridge_mr_detect_last_beat();
  void RL_scemi_pass_beat_from_bridge();
  void RL_scemi_start_of_msg();
  void RL_scemi_rest_of_msg();
  void RL_scemi_record_scemi1_msg_len();
  void RL_scemi_dispatch_scemi1_msg_in();
  void RL_scemi_drop_scemi1_msg();
  void RL_scemi_pass_input_data();
  void RL_scemi_ack_output_data1();
  void RL_scemi_ack_output_data2();
  void RL_scemi_move_to_next_ack();
  void RL_scemi_record_scemi2_msg_len();
  void RL_scemi_dispatch_scemi2_data_msg_in();
  void RL_scemi_dispatch_scemi2_credit_msg_in();
  void RL_scemi_output_mr_decode_beat();
  void RL_scemi_output_mr_detect_last_beat();
  void RL_scemi_send_scemi1_beat();
  void RL_scemi_send_scemi2_beat();
  void RL_scemi_move_scemi1_beat();
  void RL_scemi_move_scemi2_beat();
  void RL_scemi_start_of_output_msg();
  void RL_scemi_end_of_output_msg();
  void RL_scemi_swap_output_grant();
  void RL_scemi_accumulate_pending_requests();
  void RL_scemi_load_new_request_group();
  void RL_scemi_shift_request_vector();
  void RL_scemi_start_next_request();
  void RL_scemi_send_request_msg();
  void RL_scemi_start_output_data_msg();
  void RL_scemi_send_output_data();
  void RL_scemi_swap_scemi1_output_grant();
  void RL_scemi_connect_src_rdy();
  void RL_scemi_connect_dst_rdy();
  void RL_scemi_connect_data();
  void RL_scemi_connect_src_rdy_1();
  void RL_scemi_connect_dst_rdy_1();
  void RL_scemi_connect_data_1();
  void __me_check_2();
  void RL_scemi_dut_dut_prb_control_data_out_deassert_after_reset();
  void RL_scemi_dut_dut_prb_control_data_out_detect_scemi_reset();
  void RL_scemi_dut_dut_prb_control_data_out_detect_end_of_scemi_reset();
  void RL_scemi_dut_dut_prb_control_data_out_setOK();
  void RL_scemi_dut_dut_prb_control_control_in_deassert_after_reset();
  void RL_scemi_dut_dut_prb_control_control_in_detect_scemi_reset();
  void RL_scemi_dut_dut_prb_control_control_in_detect_end_of_scemi_reset();
  void RL_scemi_dut_dut_prb_control_control_in_first_request();
  void RL_scemi_dut_dut_prb_control_control_in_data_ready();
  void RL_scemi_dut_dut_prb_control_control_in_read_complete();
  void RL_scemi_dut_dut_prb_control_control_in_port_reset();
  void RL_scemi_dut_dut_prb_control_control_in_requestF_rule_update_final();
  void RL_scemi_dut_dut_prb_control_control_in_dataF_rule_enq();
  void RL_scemi_dut_dut_prb_control_control_in_dataF_rule_deq();
  void RL_scemi_dut_dut_prb_control_control_in_receive_ready();
  void RL_scemi_dut_dut_prb_control_control_in_receive();
  void RL_scemi_dut_dut_prb_control_setSample();
  void RL_scemi_dut_dut_prb_control_flagSample();
  void RL_scemi_dut_dut_prb_control_unsetFlag();
  void RL_scemi_dut_dut_prb_control_send_en();
  void RL_scemi_dut_dut_prb_control_requestInput();
  void RL_scemi_dut_dut_prb_control_receiveControl();
  void RL_scemi_dut_dut_prb_control_prb_str_recv_doEnq();
  void RL_scemi_dut_dut_prb_control_receiveTrigger();
  void RL_scemi_dut_dut_prb_control_receiveFirstData();
  void RL_scemi_dut_dut_prb_control_receiveMoreData();
  void RL_scemi_dut_dut_prb_control_respondToPing();
  void RL_scemi_dut_dut_prb_control_sendAck();
  void RL_scemi_dut_softrst_req_inport_deassert_after_reset();
  void RL_scemi_dut_softrst_req_inport_detect_scemi_reset();
  void RL_scemi_dut_softrst_req_inport_detect_end_of_scemi_reset();
  void RL_scemi_dut_softrst_req_inport_first_request();
  void RL_scemi_dut_softrst_req_inport_data_ready();
  void RL_scemi_dut_softrst_req_inport_read_complete();
  void RL_scemi_dut_softrst_req_inport_port_reset();
  void RL_scemi_dut_softrst_req_inport_requestF_rule_update_final();
  void RL_scemi_dut_softrst_req_inport_dataF_rule_enq();
  void RL_scemi_dut_softrst_req_inport_dataF_rule_deq();
  void RL_scemi_dut_softrst_req_inport_receive_ready();
  void RL_scemi_dut_softrst_req_inport_receive();
  void RL_scemi_dut_softrst_req_connect_res_mkConnectionGetPut();
  void RL_scemi_dut_softrst_req_request();
  void RL_scemi_dut_softrst_resp_outport_deassert_after_reset();
  void RL_scemi_dut_softrst_resp_outport_detect_scemi_reset();
  void RL_scemi_dut_softrst_resp_outport_detect_end_of_scemi_reset();
  void RL_scemi_dut_softrst_resp_outport_setOK();
  void RL_scemi_dut_softrst_resp_connect_res_mkConnectionGetPut();
  void RL_scemi_mem_inport_deassert_after_reset();
  void RL_scemi_mem_inport_detect_scemi_reset();
  void RL_scemi_mem_inport_detect_end_of_scemi_reset();
  void RL_scemi_mem_inport_first_request();
  void RL_scemi_mem_inport_data_ready();
  void RL_scemi_mem_inport_read_complete();
  void RL_scemi_mem_inport_port_reset();
  void RL_scemi_mem_inport_requestF_rule_update_final();
  void RL_scemi_mem_inport_dataF_rule_enq();
  void RL_scemi_mem_inport_dataF_rule_deq();
  void RL_scemi_mem_inport_receive_ready();
  void RL_scemi_mem_inport_receive();
  void RL_scemi_mem_connect_res_mkConnectionGetPut();
  void RL_scemi_mem_request();
  void RL_scemi_rsa_result_outport_deassert_after_reset();
  void RL_scemi_rsa_result_outport_detect_scemi_reset();
  void RL_scemi_rsa_result_outport_detect_end_of_scemi_reset();
  void RL_scemi_rsa_result_outport_setOK();
  void RL_scemi_rsa_result_connect_res_mkConnectionGetPut();
  void RL_scemi_shutdown_ctrl_in_deassert_after_reset();
  void RL_scemi_shutdown_ctrl_in_detect_scemi_reset();
  void RL_scemi_shutdown_ctrl_in_detect_end_of_scemi_reset();
  void RL_scemi_shutdown_ctrl_in_first_request();
  void RL_scemi_shutdown_ctrl_in_data_ready();
  void RL_scemi_shutdown_ctrl_in_read_complete();
  void RL_scemi_shutdown_ctrl_in_port_reset();
  void RL_scemi_shutdown_ctrl_in_requestF_rule_update_final();
  void RL_scemi_shutdown_ctrl_in_dataF_rule_enq();
  void RL_scemi_shutdown_ctrl_in_dataF_rule_deq();
  void RL_scemi_shutdown_ctrl_in_receive_ready();
  void RL_scemi_shutdown_ctrl_in_receive();
  void RL_scemi_shutdown_ctrl_out_deassert_after_reset();
  void RL_scemi_shutdown_ctrl_out_detect_scemi_reset();
  void RL_scemi_shutdown_ctrl_out_detect_end_of_scemi_reset();
  void RL_scemi_shutdown_ctrl_out_setOK();
  void RL_scemi_shutdown_request();
  void RL_scemi_shutdown_ack();
  void RL_scemi_shutdown_shutdown();
  void RL_scemi_clockGenerators_clock_gens_is_allowed_sync_clock_domain_crossing();
  void RL_scemi_clockGenerators_clock_gens_do_ticks();
  void RL_scemi_scan_output_ports();
  void RL_scemi_rstgen_trigger();
  void RL_scemi_dut_dut_dutIfc_donerest();
  void RL_scemi_dut_softrst_req_connect_put_mkConnectionGetPut();
  void RL_scemi_dut_softrst_resp_connect_get_mkConnectionGetPut();
  void RL_scemi_mem_connect_put_mkConnectionGetPut();
  void RL_scemi_rsa_result_connect_get_mkConnectionGetPut();
  void RL_scemi_clk_port_rstgen_trigger();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_scemi_dut_dut_dutIfc_myrst$OUT_RST(tUInt8 ARG_rst_in);
  void reset_scemi_clk_port_rstgen_final_reset$RST_OUT(tUInt8 ARG_rst_in);
  void reset_scemi_clk_port_rstgen_rstgen$OUT_RST(tUInt8 ARG_rst_in);
  void reset_scemi_clk_port_rstgen_inv_rstgen$OUT_RST(tUInt8 ARG_rst_in);
  void reset_scemi_clk_port_rstgen_inv_rstn$OUT_RST(tUInt8 ARG_rst_in);
  void reset_scemi_rstgen_final_reset$RST_OUT(tUInt8 ARG_rst_in);
  void reset_scemi_rstgen_rstgen$OUT_RST(tUInt8 ARG_rst_in);
  void reset_scemi_rstgen_inv_rstgen$OUT_RST(tUInt8 ARG_rst_in);
  void reset_scemi_rstgen_inv_rstn$OUT_RST(tUInt8 ARG_rst_in);
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
  static void static_reset_scemi_dut_dut_dutIfc_myrst$OUT_RST(void *my_this, tUInt8 ARG_rst_in);
  static void static_reset_scemi_clk_port_rstgen_final_reset$RST_OUT(void *my_this,
								     tUInt8 ARG_rst_in);
  static void static_reset_scemi_clk_port_rstgen_rstgen$OUT_RST(void *my_this, tUInt8 ARG_rst_in);
  static void static_reset_scemi_clk_port_rstgen_inv_rstgen$OUT_RST(void *my_this, tUInt8 ARG_rst_in);
  static void static_reset_scemi_clk_port_rstgen_inv_rstn$OUT_RST(void *my_this, tUInt8 ARG_rst_in);
  static void static_reset_scemi_rstgen_final_reset$RST_OUT(void *my_this, tUInt8 ARG_rst_in);
  static void static_reset_scemi_rstgen_rstgen$OUT_RST(void *my_this, tUInt8 ARG_rst_in);
  static void static_reset_scemi_rstgen_inv_rstgen$OUT_RST(void *my_this, tUInt8 ARG_rst_in);
  static void static_reset_scemi_rstgen_inv_rstn$OUT_RST(void *my_this, tUInt8 ARG_rst_in);
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
  void set_clk_1(char const *s);
  void set_clk_2(char const *s);
  void set_clk_3(char const *s);
  void set_clk_4(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkBridge &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkBridge &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkBridge &backing);
  void vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkBridge &backing);
};

#endif /* ifndef __mkBridge_h__ */
