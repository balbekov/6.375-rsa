/*
 * Generated by Bluespec Compiler, version 2012.10.beta2 (build 29674, 2012-10.10)
 * 
 * On Wed Apr 17 15:19:32 EDT 2013
 * 
 */
#include "bluesim_primitives.h"
#include "mkMemory.h"


/* String declarations */
static std::string const __str_literal_1("ERROR: %m: mkBRAMSeverAdapter overrun", 37u);


/* Constructor */
MOD_mkMemory::MOD_mkMemory(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_bram_memory(simHdl, "bram_memory", this, (tUInt8)0u, 16u, 16u, 65536u, 1u),
    INST_bram_serverAdapter_cnt(simHdl, "bram_serverAdapter_cnt", this, 3u, (tUInt8)0u, (tUInt8)0u),
    INST_bram_serverAdapter_cnt_1(simHdl, "bram_serverAdapter_cnt_1", this, 3u, (tUInt8)0u),
    INST_bram_serverAdapter_cnt_2(simHdl, "bram_serverAdapter_cnt_2", this, 3u, (tUInt8)0u),
    INST_bram_serverAdapter_cnt_3(simHdl, "bram_serverAdapter_cnt_3", this, 3u, (tUInt8)0u),
    INST_bram_serverAdapter_outDataCore(simHdl,
					"bram_serverAdapter_outDataCore",
					this,
					16u,
					3u,
					1u,
					0u),
    INST_bram_serverAdapter_outData_deqCalled(simHdl, "bram_serverAdapter_outData_deqCalled", this, 0u),
    INST_bram_serverAdapter_outData_enqData(simHdl,
					    "bram_serverAdapter_outData_enqData",
					    this,
					    16u,
					    (tUInt8)0u),
    INST_bram_serverAdapter_outData_outData(simHdl,
					    "bram_serverAdapter_outData_outData",
					    this,
					    16u,
					    (tUInt8)0u),
    INST_bram_serverAdapter_s1(simHdl, "bram_serverAdapter_s1", this, 2u, (tUInt8)0u, (tUInt8)0u),
    INST_bram_serverAdapter_s1_1(simHdl, "bram_serverAdapter_s1_1", this, 2u, (tUInt8)0u),
    INST_bram_serverAdapter_writeWithResp(simHdl,
					  "bram_serverAdapter_writeWithResp",
					  this,
					  2u,
					  (tUInt8)0u),
    INST_memInit_initialized(simHdl, "memInit_initialized", this, 1u, (tUInt8)0u, (tUInt8)0u),
    PORT_RST_N((tUInt8)1u)
{
  PORT_EN_response_get = false;
  PORT_EN_request_put = false;
  PORT_EN_init_request_put = false;
  PORT_request_put = 0llu;
  PORT_init_request_put = 0llu;
  PORT_response_get = 0u;
  PORT_RDY_request_put = false;
  PORT_RDY_response_get = false;
  PORT_RDY_init_request_put = false;
  PORT_init_done = false;
  PORT_RDY_init_done = false;
  symbol_count = 63u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkMemory::init_symbols_0()
{
  init_symbol(&symbols[0u], "b__h907", SYM_DEF, &DEF_b__h907, 3u);
  init_symbol(&symbols[1u], "bram_memory", SYM_MODULE, &INST_bram_memory);
  init_symbol(&symbols[2u], "bram_serverAdapter_cnt", SYM_MODULE, &INST_bram_serverAdapter_cnt);
  init_symbol(&symbols[3u], "bram_serverAdapter_cnt_1", SYM_MODULE, &INST_bram_serverAdapter_cnt_1);
  init_symbol(&symbols[4u], "bram_serverAdapter_cnt_2", SYM_MODULE, &INST_bram_serverAdapter_cnt_2);
  init_symbol(&symbols[5u], "bram_serverAdapter_cnt_3", SYM_MODULE, &INST_bram_serverAdapter_cnt_3);
  init_symbol(&symbols[6u],
	      "bram_serverAdapter_outData_deqCalled",
	      SYM_MODULE,
	      &INST_bram_serverAdapter_outData_deqCalled);
  init_symbol(&symbols[7u],
	      "bram_serverAdapter_outData_enqData",
	      SYM_MODULE,
	      &INST_bram_serverAdapter_outData_enqData);
  init_symbol(&symbols[8u],
	      "bram_serverAdapter_outData_outData",
	      SYM_MODULE,
	      &INST_bram_serverAdapter_outData_outData);
  init_symbol(&symbols[9u],
	      "bram_serverAdapter_outDataCore",
	      SYM_MODULE,
	      &INST_bram_serverAdapter_outDataCore);
  init_symbol(&symbols[10u], "bram_serverAdapter_s1", SYM_MODULE, &INST_bram_serverAdapter_s1);
  init_symbol(&symbols[11u], "bram_serverAdapter_s1_1", SYM_MODULE, &INST_bram_serverAdapter_s1_1);
  init_symbol(&symbols[12u],
	      "bram_serverAdapter_writeWithResp",
	      SYM_MODULE,
	      &INST_bram_serverAdapter_writeWithResp);
  init_symbol(&symbols[13u], "CAN_FIRE_init_done", SYM_DEF, &DEF_CAN_FIRE_init_done, 1u);
  init_symbol(&symbols[14u],
	      "CAN_FIRE_init_request_put",
	      SYM_DEF,
	      &DEF_CAN_FIRE_init_request_put,
	      1u);
  init_symbol(&symbols[15u],
	      "CAN_FIRE_RL_bram_serverAdapter_cnt_finalAdd",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapter_cnt_finalAdd,
	      1u);
  init_symbol(&symbols[16u],
	      "CAN_FIRE_RL_bram_serverAdapter_moveToOutFIFO",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapter_moveToOutFIFO,
	      1u);
  init_symbol(&symbols[17u],
	      "CAN_FIRE_RL_bram_serverAdapter_outData_deqOnly",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapter_outData_deqOnly,
	      1u);
  init_symbol(&symbols[18u],
	      "CAN_FIRE_RL_bram_serverAdapter_outData_enqAndDeq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapter_outData_enqAndDeq,
	      1u);
  init_symbol(&symbols[19u],
	      "CAN_FIRE_RL_bram_serverAdapter_outData_enqOnly",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapter_outData_enqOnly,
	      1u);
  init_symbol(&symbols[20u],
	      "CAN_FIRE_RL_bram_serverAdapter_outData_setFirstCore",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapter_outData_setFirstCore,
	      1u);
  init_symbol(&symbols[21u],
	      "CAN_FIRE_RL_bram_serverAdapter_outData_setFirstEnq",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapter_outData_setFirstEnq,
	      1u);
  init_symbol(&symbols[22u],
	      "CAN_FIRE_RL_bram_serverAdapter_overRun",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapter_overRun,
	      1u);
  init_symbol(&symbols[23u],
	      "CAN_FIRE_RL_bram_serverAdapter_s1__dreg_update",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapter_s1__dreg_update,
	      1u);
  init_symbol(&symbols[24u],
	      "CAN_FIRE_RL_bram_serverAdapter_stageReadResponseAlways",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_bram_serverAdapter_stageReadResponseAlways,
	      1u);
  init_symbol(&symbols[25u], "CAN_FIRE_request_put", SYM_DEF, &DEF_CAN_FIRE_request_put, 1u);
  init_symbol(&symbols[26u], "CAN_FIRE_response_get", SYM_DEF, &DEF_CAN_FIRE_response_get, 1u);
  init_symbol(&symbols[27u], "EN_init_request_put", SYM_PORT, &PORT_EN_init_request_put, 1u);
  init_symbol(&symbols[28u], "EN_request_put", SYM_PORT, &PORT_EN_request_put, 1u);
  init_symbol(&symbols[29u], "EN_response_get", SYM_PORT, &PORT_EN_response_get, 1u);
  init_symbol(&symbols[30u], "init_done", SYM_PORT, &PORT_init_done, 1u);
  init_symbol(&symbols[31u], "init_request_put", SYM_PORT, &PORT_init_request_put, 33u);
  init_symbol(&symbols[32u], "memInit_initialized", SYM_MODULE, &INST_memInit_initialized);
  init_symbol(&symbols[33u],
	      "memInit_initialized__h1870",
	      SYM_DEF,
	      &DEF_memInit_initialized__h1870,
	      1u);
  init_symbol(&symbols[34u], "RDY_init_done", SYM_PORT, &PORT_RDY_init_done, 1u);
  init_symbol(&symbols[35u], "RDY_init_request_put", SYM_PORT, &PORT_RDY_init_request_put, 1u);
  init_symbol(&symbols[36u], "RDY_request_put", SYM_PORT, &PORT_RDY_request_put, 1u);
  init_symbol(&symbols[37u], "RDY_response_get", SYM_PORT, &PORT_RDY_response_get, 1u);
  init_symbol(&symbols[38u], "RL_bram_serverAdapter_cnt_finalAdd", SYM_RULE);
  init_symbol(&symbols[39u], "RL_bram_serverAdapter_moveToOutFIFO", SYM_RULE);
  init_symbol(&symbols[40u], "RL_bram_serverAdapter_outData_deqOnly", SYM_RULE);
  init_symbol(&symbols[41u], "RL_bram_serverAdapter_outData_enqAndDeq", SYM_RULE);
  init_symbol(&symbols[42u], "RL_bram_serverAdapter_outData_enqOnly", SYM_RULE);
  init_symbol(&symbols[43u], "RL_bram_serverAdapter_outData_setFirstCore", SYM_RULE);
  init_symbol(&symbols[44u], "RL_bram_serverAdapter_outData_setFirstEnq", SYM_RULE);
  init_symbol(&symbols[45u], "RL_bram_serverAdapter_overRun", SYM_RULE);
  init_symbol(&symbols[46u], "RL_bram_serverAdapter_s1__dreg_update", SYM_RULE);
  init_symbol(&symbols[47u], "RL_bram_serverAdapter_stageReadResponseAlways", SYM_RULE);
  init_symbol(&symbols[48u], "request_put", SYM_PORT, &PORT_request_put, 33u);
  init_symbol(&symbols[49u], "response_get", SYM_PORT, &PORT_response_get, 16u);
  init_symbol(&symbols[50u],
	      "WILL_FIRE_init_request_put",
	      SYM_DEF,
	      &DEF_WILL_FIRE_init_request_put,
	      1u);
  init_symbol(&symbols[51u],
	      "WILL_FIRE_RL_bram_serverAdapter_cnt_finalAdd",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapter_cnt_finalAdd,
	      1u);
  init_symbol(&symbols[52u],
	      "WILL_FIRE_RL_bram_serverAdapter_moveToOutFIFO",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapter_moveToOutFIFO,
	      1u);
  init_symbol(&symbols[53u],
	      "WILL_FIRE_RL_bram_serverAdapter_outData_deqOnly",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapter_outData_deqOnly,
	      1u);
  init_symbol(&symbols[54u],
	      "WILL_FIRE_RL_bram_serverAdapter_outData_enqAndDeq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapter_outData_enqAndDeq,
	      1u);
  init_symbol(&symbols[55u],
	      "WILL_FIRE_RL_bram_serverAdapter_outData_enqOnly",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapter_outData_enqOnly,
	      1u);
  init_symbol(&symbols[56u],
	      "WILL_FIRE_RL_bram_serverAdapter_outData_setFirstCore",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapter_outData_setFirstCore,
	      1u);
  init_symbol(&symbols[57u],
	      "WILL_FIRE_RL_bram_serverAdapter_outData_setFirstEnq",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapter_outData_setFirstEnq,
	      1u);
  init_symbol(&symbols[58u],
	      "WILL_FIRE_RL_bram_serverAdapter_overRun",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapter_overRun,
	      1u);
  init_symbol(&symbols[59u],
	      "WILL_FIRE_RL_bram_serverAdapter_s1__dreg_update",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapter_s1__dreg_update,
	      1u);
  init_symbol(&symbols[60u],
	      "WILL_FIRE_RL_bram_serverAdapter_stageReadResponseAlways",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_bram_serverAdapter_stageReadResponseAlways,
	      1u);
  init_symbol(&symbols[61u], "WILL_FIRE_request_put", SYM_DEF, &DEF_WILL_FIRE_request_put, 1u);
  init_symbol(&symbols[62u], "WILL_FIRE_response_get", SYM_DEF, &DEF_WILL_FIRE_response_get, 1u);
}


/* Rule actions */

void MOD_mkMemory::RL_bram_serverAdapter_outData_setFirstCore()
{
  tUInt32 DEF_x__h426;
  DEF_x__h426 = INST_bram_serverAdapter_outDataCore.METH_first();
  INST_bram_serverAdapter_outData_outData.METH_wset(DEF_x__h426);
}

void MOD_mkMemory::RL_bram_serverAdapter_outData_setFirstEnq()
{
  DEF_x__h517 = INST_bram_serverAdapter_outData_enqData.METH_wget();
  INST_bram_serverAdapter_outData_outData.METH_wset(DEF_x__h517);
}

void MOD_mkMemory::RL_bram_serverAdapter_outData_enqOnly()
{
  DEF_x__h517 = INST_bram_serverAdapter_outData_enqData.METH_wget();
  INST_bram_serverAdapter_outDataCore.METH_enq(DEF_x__h517);
}

void MOD_mkMemory::RL_bram_serverAdapter_outData_deqOnly()
{
  INST_bram_serverAdapter_outDataCore.METH_deq();
}

void MOD_mkMemory::RL_bram_serverAdapter_outData_enqAndDeq()
{
  DEF_x__h517 = INST_bram_serverAdapter_outData_enqData.METH_wget();
  INST_bram_serverAdapter_outDataCore.METH_enq(DEF_x__h517);
  INST_bram_serverAdapter_outDataCore.METH_deq();
}

void MOD_mkMemory::RL_bram_serverAdapter_cnt_finalAdd()
{
  tUInt8 DEF_IF_bram_serverAdapter_cnt_3_whas__3_THEN_bram__ETC___d33;
  tUInt8 DEF_b__h887;
  DEF_b__h887 = INST_bram_serverAdapter_cnt_3.METH_wget();
  DEF_b__h907 = INST_bram_serverAdapter_cnt.METH_read();
  DEF_bram_serverAdapter_cnt_3_whas____d82 = INST_bram_serverAdapter_cnt_3.METH_whas();
  DEF_bram_serverAdapter_cnt_2_whas____d78 = INST_bram_serverAdapter_cnt_2.METH_whas();
  DEF_bram_serverAdapter_cnt_1_whas____d77 = INST_bram_serverAdapter_cnt_1.METH_whas();
  DEF_IF_bram_serverAdapter_cnt_3_whas__3_THEN_bram__ETC___d33 = DEF_bram_serverAdapter_cnt_3_whas____d82 ? DEF_b__h887 : (tUInt8)7u & (((tUInt8)7u & (DEF_b__h907 + (DEF_bram_serverAdapter_cnt_1_whas____d77 ? INST_bram_serverAdapter_cnt_1.METH_wget() : (tUInt8)0u))) + (DEF_bram_serverAdapter_cnt_2_whas____d78 ? INST_bram_serverAdapter_cnt_2.METH_wget() : (tUInt8)0u));
  INST_bram_serverAdapter_cnt.METH_write(DEF_IF_bram_serverAdapter_cnt_3_whas__3_THEN_bram__ETC___d33);
}

void MOD_mkMemory::RL_bram_serverAdapter_s1__dreg_update()
{
  tUInt8 DEF_bram_serverAdapter_s1_1_whas__4_AND_0_OR_bram__ETC___d42;
  tUInt8 DEF_IF_bram_serverAdapter_s1_1_wget__5_BIT_1_6_THE_ETC___d92;
  tUInt8 DEF_bram_serverAdapter_s1_1_wget__5_BIT_0___d86;
  tUInt8 DEF_bram_serverAdapter_s1_1_wget__5_BIT_1___d81;
  tUInt8 DEF_bram_serverAdapter_s1_1_whas____d91;
  tUInt8 DEF_bram_serverAdapter_s1_1_wget____d88;
  DEF_bram_serverAdapter_s1_1_wget____d88 = INST_bram_serverAdapter_s1_1.METH_wget();
  DEF_bram_serverAdapter_s1_1_whas____d91 = INST_bram_serverAdapter_s1_1.METH_whas();
  DEF_bram_serverAdapter_s1_1_wget__5_BIT_1___d81 = (tUInt8)(DEF_bram_serverAdapter_s1_1_wget____d88 >> 1u);
  DEF_bram_serverAdapter_s1_1_wget__5_BIT_0___d86 = (tUInt8)((tUInt8)1u & DEF_bram_serverAdapter_s1_1_wget____d88);
  DEF_IF_bram_serverAdapter_s1_1_wget__5_BIT_1_6_THE_ETC___d92 = DEF_bram_serverAdapter_s1_1_wget__5_BIT_1___d81 ? DEF_bram_serverAdapter_s1_1_wget__5_BIT_0___d86 : DEF_bram_serverAdapter_s1_1_wget__5_BIT_0___d86;
  DEF_bram_serverAdapter_s1_1_whas__4_AND_0_OR_bram__ETC___d42 = (tUInt8)3u & (((DEF_bram_serverAdapter_s1_1_whas____d91 && DEF_bram_serverAdapter_s1_1_wget__5_BIT_1___d81) << 1u) | (DEF_bram_serverAdapter_s1_1_whas____d91 ? DEF_IF_bram_serverAdapter_s1_1_wget__5_BIT_1_6_THE_ETC___d92 : DEF_IF_bram_serverAdapter_s1_1_wget__5_BIT_1_6_THE_ETC___d92));
  INST_bram_serverAdapter_s1.METH_write(DEF_bram_serverAdapter_s1_1_whas__4_AND_0_OR_bram__ETC___d42);
}

void MOD_mkMemory::RL_bram_serverAdapter_stageReadResponseAlways()
{
  tUInt8 DEF_NOT_bram_serverAdapter_writeWithResp_wget__4_B_ETC___d83;
  tUInt8 DEF__1_CONCAT_NOT_bram_serverAdapter_writeWithResp__ETC___d49;
  tUInt8 DEF_ab_BIT_0___h1416;
  tUInt8 DEF_ab_BIT_1___h1410;
  tUInt8 DEF_ab__h1402;
  DEF_ab__h1402 = INST_bram_serverAdapter_writeWithResp.METH_wget();
  DEF_ab_BIT_1___h1410 = (tUInt8)(DEF_ab__h1402 >> 1u);
  DEF_ab_BIT_0___h1416 = (tUInt8)((tUInt8)1u & DEF_ab__h1402);
  DEF_NOT_bram_serverAdapter_writeWithResp_wget__4_B_ETC___d83 = !DEF_ab_BIT_1___h1410 || DEF_ab_BIT_0___h1416;
  DEF__1_CONCAT_NOT_bram_serverAdapter_writeWithResp__ETC___d49 = (tUInt8)3u & (((tUInt8)1u << 1u) | DEF_NOT_bram_serverAdapter_writeWithResp_wget__4_B_ETC___d83);
  INST_bram_serverAdapter_s1_1.METH_wset(DEF__1_CONCAT_NOT_bram_serverAdapter_writeWithResp__ETC___d49);
  if (DEF_NOT_bram_serverAdapter_writeWithResp_wget__4_B_ETC___d83)
    INST_bram_serverAdapter_cnt_1.METH_wset((tUInt8)1u);
}

void MOD_mkMemory::RL_bram_serverAdapter_moveToOutFIFO()
{
  tUInt32 DEF_v__h1520;
  DEF_v__h1520 = INST_bram_memory.METH_read();
  DEF_bram_serverAdapter_s1___d85 = INST_bram_serverAdapter_s1.METH_read();
  DEF_bram_serverAdapter_s1_0_BIT_0___d87 = (tUInt8)((tUInt8)1u & DEF_bram_serverAdapter_s1___d85);
  if (DEF_bram_serverAdapter_s1_0_BIT_0___d87)
    INST_bram_serverAdapter_outData_enqData.METH_wset(DEF_v__h1520);
}

void MOD_mkMemory::RL_bram_serverAdapter_overRun()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    dollar_display(sim_hdl, this, "s", &__str_literal_1);
}


/* Methods */

void MOD_mkMemory::METH_request_put(tUInt64 ARG_request_put)
{
  tUInt8 DEF_request_put_BIT_32_0_CONCAT_0___d63;
  tUInt8 DEF_request_put_BIT_32___d84;
  tUInt32 DEF_x3__h1695;
  tUInt32 DEF_x2__h1694;
  PORT_EN_request_put = (tUInt8)1u;
  DEF_WILL_FIRE_request_put = (tUInt8)1u;
  PORT_request_put = ARG_request_put;
  DEF_x2__h1694 = (tUInt32)(65535u & (ARG_request_put >> 16u));
  DEF_x3__h1695 = (tUInt32)(65535u & ARG_request_put);
  DEF_request_put_BIT_32___d84 = (tUInt8)(ARG_request_put >> 32u);
  DEF_request_put_BIT_32_0_CONCAT_0___d63 = (tUInt8)3u & (DEF_request_put_BIT_32___d84 << 1u);
  INST_bram_memory.METH_put(DEF_request_put_BIT_32___d84, DEF_x2__h1694, DEF_x3__h1695);
  INST_bram_serverAdapter_writeWithResp.METH_wset(DEF_request_put_BIT_32_0_CONCAT_0___d63);
}

tUInt8 MOD_mkMemory::METH_RDY_request_put()
{
  DEF_b__h907 = INST_bram_serverAdapter_cnt.METH_read();
  DEF_bram_serverAdapter_cnt_6_SLT_3___d73 = primSLT8(1u, 3u, (tUInt8)(DEF_b__h907), 3u, (tUInt8)3u);
  DEF_CAN_FIRE_request_put = DEF_bram_serverAdapter_cnt_6_SLT_3___d73;
  PORT_RDY_request_put = DEF_CAN_FIRE_request_put;
  return PORT_RDY_request_put;
}

tUInt32 MOD_mkMemory::METH_response_get()
{
  tUInt32 DEF_response_get__avValue1;
  PORT_EN_response_get = (tUInt8)1u;
  DEF_WILL_FIRE_response_get = (tUInt8)1u;
  DEF_response_get__avValue1 = INST_bram_serverAdapter_outData_outData.METH_wget();
  INST_bram_serverAdapter_outData_deqCalled.METH_wset();
  INST_bram_serverAdapter_cnt_2.METH_wset((tUInt8)7u);
  PORT_response_get = DEF_response_get__avValue1;
  return PORT_response_get;
}

tUInt8 MOD_mkMemory::METH_RDY_response_get()
{
  DEF_bram_serverAdapter_outData_enqData_whas____d75 = INST_bram_serverAdapter_outData_enqData.METH_whas();
  DEF_bram_serverAdapter_outDataCore_notEmpty____d74 = INST_bram_serverAdapter_outDataCore.METH_notEmpty();
  DEF_CAN_FIRE_response_get = (DEF_bram_serverAdapter_outDataCore_notEmpty____d74 || DEF_bram_serverAdapter_outData_enqData_whas____d75) && INST_bram_serverAdapter_outData_outData.METH_whas();
  PORT_RDY_response_get = DEF_CAN_FIRE_response_get;
  return PORT_RDY_response_get;
}

void MOD_mkMemory::METH_init_request_put(tUInt64 ARG_init_request_put)
{
  tUInt8 DEF_NOT_init_request_put_BIT_32_7___d68;
  tUInt8 DEF_init_request_put_BIT_32___d93;
  tUInt32 DEF_x3__h1931;
  tUInt32 DEF_x2__h1930;
  PORT_EN_init_request_put = (tUInt8)1u;
  DEF_WILL_FIRE_init_request_put = (tUInt8)1u;
  PORT_init_request_put = ARG_init_request_put;
  DEF_x2__h1930 = (tUInt32)(65535u & (ARG_init_request_put >> 16u));
  DEF_x3__h1931 = (tUInt32)(65535u & ARG_init_request_put);
  DEF_init_request_put_BIT_32___d93 = (tUInt8)(ARG_init_request_put >> 32u);
  DEF_NOT_init_request_put_BIT_32_7___d68 = !DEF_init_request_put_BIT_32___d93;
  if (DEF_init_request_put_BIT_32___d93)
    INST_memInit_initialized.METH_write((tUInt8)1u);
  if (DEF_NOT_init_request_put_BIT_32_7___d68)
    INST_bram_memory.METH_put((tUInt8)1u, DEF_x2__h1930, DEF_x3__h1931);
  if (DEF_NOT_init_request_put_BIT_32_7___d68)
    INST_bram_serverAdapter_writeWithResp.METH_wset((tUInt8)2u);
}

tUInt8 MOD_mkMemory::METH_RDY_init_request_put()
{
  DEF_b__h907 = INST_bram_serverAdapter_cnt.METH_read();
  DEF_bram_serverAdapter_cnt_6_SLT_3___d73 = primSLT8(1u, 3u, (tUInt8)(DEF_b__h907), 3u, (tUInt8)3u);
  DEF_memInit_initialized__h1870 = INST_memInit_initialized.METH_read();
  DEF_CAN_FIRE_init_request_put = !DEF_memInit_initialized__h1870 && DEF_bram_serverAdapter_cnt_6_SLT_3___d73;
  PORT_RDY_init_request_put = DEF_CAN_FIRE_init_request_put;
  return PORT_RDY_init_request_put;
}

tUInt8 MOD_mkMemory::METH_init_done()
{
  DEF_memInit_initialized__h1870 = INST_memInit_initialized.METH_read();
  PORT_init_done = DEF_memInit_initialized__h1870;
  return PORT_init_done;
}

tUInt8 MOD_mkMemory::METH_RDY_init_done()
{
  DEF_CAN_FIRE_init_done = (tUInt8)1u;
  PORT_RDY_init_done = DEF_CAN_FIRE_init_done;
  return PORT_RDY_init_done;
}


/* Reset routines */

void MOD_mkMemory::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_memInit_initialized.reset_RST(ARG_rst_in);
  INST_bram_serverAdapter_s1.reset_RST(ARG_rst_in);
  INST_bram_serverAdapter_outDataCore.reset_RST(ARG_rst_in);
  INST_bram_serverAdapter_cnt.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkMemory::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkMemory::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_bram_memory.dump_state(indent + 2u);
  INST_bram_serverAdapter_cnt.dump_state(indent + 2u);
  INST_bram_serverAdapter_cnt_1.dump_state(indent + 2u);
  INST_bram_serverAdapter_cnt_2.dump_state(indent + 2u);
  INST_bram_serverAdapter_cnt_3.dump_state(indent + 2u);
  INST_bram_serverAdapter_outDataCore.dump_state(indent + 2u);
  INST_bram_serverAdapter_outData_deqCalled.dump_state(indent + 2u);
  INST_bram_serverAdapter_outData_enqData.dump_state(indent + 2u);
  INST_bram_serverAdapter_outData_outData.dump_state(indent + 2u);
  INST_bram_serverAdapter_s1.dump_state(indent + 2u);
  INST_bram_serverAdapter_s1_1.dump_state(indent + 2u);
  INST_bram_serverAdapter_writeWithResp.dump_state(indent + 2u);
  INST_memInit_initialized.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkMemory::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 63u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapter_cnt_finalAdd", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapter_moveToOutFIFO", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapter_outData_deqOnly", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapter_outData_enqAndDeq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapter_outData_enqOnly", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapter_outData_setFirstCore", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapter_outData_setFirstEnq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapter_overRun", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapter_s1__dreg_update", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_bram_serverAdapter_stageReadResponseAlways", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_init_done", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_init_request_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_request_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_response_get", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapter_cnt_finalAdd", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapter_moveToOutFIFO", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapter_outData_deqOnly", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapter_outData_enqAndDeq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapter_outData_enqOnly", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapter_outData_setFirstCore", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapter_outData_setFirstEnq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapter_overRun", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapter_s1__dreg_update", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_bram_serverAdapter_stageReadResponseAlways", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_init_request_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_request_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_response_get", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h907", 3u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapter_cnt_1_whas____d77", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapter_cnt_2_whas____d78", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapter_cnt_3_whas____d82", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapter_cnt_6_SLT_3___d73", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapter_outDataCore_notEmpty____d74", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapter_outData_enqData_whas____d75", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapter_s1_0_BIT_0___d87", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapter_s1___d85", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "memInit_initialized__h1870", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h517", 16u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_init_request_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_request_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_response_get", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_init_done", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_init_request_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_request_put", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_response_get", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "init_done", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "init_request_put", 33u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "request_put", 33u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "response_get", 16u);
  num = INST_bram_memory.dump_VCD_defs(num);
  num = INST_bram_serverAdapter_cnt.dump_VCD_defs(num);
  num = INST_bram_serverAdapter_cnt_1.dump_VCD_defs(num);
  num = INST_bram_serverAdapter_cnt_2.dump_VCD_defs(num);
  num = INST_bram_serverAdapter_cnt_3.dump_VCD_defs(num);
  num = INST_bram_serverAdapter_outDataCore.dump_VCD_defs(num);
  num = INST_bram_serverAdapter_outData_deqCalled.dump_VCD_defs(num);
  num = INST_bram_serverAdapter_outData_enqData.dump_VCD_defs(num);
  num = INST_bram_serverAdapter_outData_outData.dump_VCD_defs(num);
  num = INST_bram_serverAdapter_s1.dump_VCD_defs(num);
  num = INST_bram_serverAdapter_s1_1.dump_VCD_defs(num);
  num = INST_bram_serverAdapter_writeWithResp.dump_VCD_defs(num);
  num = INST_memInit_initialized.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkMemory::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkMemory &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkMemory::vcd_defs(tVCDDumpType dt, MOD_mkMemory &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 3u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 16u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 33u);
    vcd_write_x(sim_hdl, num++, 33u);
    vcd_write_x(sim_hdl, num++, 16u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapter_cnt_finalAdd) != DEF_CAN_FIRE_RL_bram_serverAdapter_cnt_finalAdd)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapter_cnt_finalAdd, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapter_cnt_finalAdd = DEF_CAN_FIRE_RL_bram_serverAdapter_cnt_finalAdd;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapter_moveToOutFIFO) != DEF_CAN_FIRE_RL_bram_serverAdapter_moveToOutFIFO)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapter_moveToOutFIFO, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapter_moveToOutFIFO = DEF_CAN_FIRE_RL_bram_serverAdapter_moveToOutFIFO;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapter_outData_deqOnly) != DEF_CAN_FIRE_RL_bram_serverAdapter_outData_deqOnly)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapter_outData_deqOnly, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapter_outData_deqOnly = DEF_CAN_FIRE_RL_bram_serverAdapter_outData_deqOnly;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapter_outData_enqAndDeq) != DEF_CAN_FIRE_RL_bram_serverAdapter_outData_enqAndDeq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapter_outData_enqAndDeq, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapter_outData_enqAndDeq = DEF_CAN_FIRE_RL_bram_serverAdapter_outData_enqAndDeq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapter_outData_enqOnly) != DEF_CAN_FIRE_RL_bram_serverAdapter_outData_enqOnly)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapter_outData_enqOnly, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapter_outData_enqOnly = DEF_CAN_FIRE_RL_bram_serverAdapter_outData_enqOnly;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapter_outData_setFirstCore) != DEF_CAN_FIRE_RL_bram_serverAdapter_outData_setFirstCore)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapter_outData_setFirstCore, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapter_outData_setFirstCore = DEF_CAN_FIRE_RL_bram_serverAdapter_outData_setFirstCore;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapter_outData_setFirstEnq) != DEF_CAN_FIRE_RL_bram_serverAdapter_outData_setFirstEnq)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapter_outData_setFirstEnq, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapter_outData_setFirstEnq = DEF_CAN_FIRE_RL_bram_serverAdapter_outData_setFirstEnq;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapter_overRun) != DEF_CAN_FIRE_RL_bram_serverAdapter_overRun)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapter_overRun, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapter_overRun = DEF_CAN_FIRE_RL_bram_serverAdapter_overRun;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapter_s1__dreg_update) != DEF_CAN_FIRE_RL_bram_serverAdapter_s1__dreg_update)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapter_s1__dreg_update, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapter_s1__dreg_update = DEF_CAN_FIRE_RL_bram_serverAdapter_s1__dreg_update;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_bram_serverAdapter_stageReadResponseAlways) != DEF_CAN_FIRE_RL_bram_serverAdapter_stageReadResponseAlways)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_bram_serverAdapter_stageReadResponseAlways, 1u);
	backing.DEF_CAN_FIRE_RL_bram_serverAdapter_stageReadResponseAlways = DEF_CAN_FIRE_RL_bram_serverAdapter_stageReadResponseAlways;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_init_done) != DEF_CAN_FIRE_init_done)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_init_done, 1u);
	backing.DEF_CAN_FIRE_init_done = DEF_CAN_FIRE_init_done;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_init_request_put) != DEF_CAN_FIRE_init_request_put)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_init_request_put, 1u);
	backing.DEF_CAN_FIRE_init_request_put = DEF_CAN_FIRE_init_request_put;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_request_put) != DEF_CAN_FIRE_request_put)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_request_put, 1u);
	backing.DEF_CAN_FIRE_request_put = DEF_CAN_FIRE_request_put;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_response_get) != DEF_CAN_FIRE_response_get)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_response_get, 1u);
	backing.DEF_CAN_FIRE_response_get = DEF_CAN_FIRE_response_get;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapter_cnt_finalAdd) != DEF_WILL_FIRE_RL_bram_serverAdapter_cnt_finalAdd)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapter_cnt_finalAdd, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapter_cnt_finalAdd = DEF_WILL_FIRE_RL_bram_serverAdapter_cnt_finalAdd;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapter_moveToOutFIFO) != DEF_WILL_FIRE_RL_bram_serverAdapter_moveToOutFIFO)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapter_moveToOutFIFO, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapter_moveToOutFIFO = DEF_WILL_FIRE_RL_bram_serverAdapter_moveToOutFIFO;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapter_outData_deqOnly) != DEF_WILL_FIRE_RL_bram_serverAdapter_outData_deqOnly)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapter_outData_deqOnly, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapter_outData_deqOnly = DEF_WILL_FIRE_RL_bram_serverAdapter_outData_deqOnly;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapter_outData_enqAndDeq) != DEF_WILL_FIRE_RL_bram_serverAdapter_outData_enqAndDeq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapter_outData_enqAndDeq, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapter_outData_enqAndDeq = DEF_WILL_FIRE_RL_bram_serverAdapter_outData_enqAndDeq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapter_outData_enqOnly) != DEF_WILL_FIRE_RL_bram_serverAdapter_outData_enqOnly)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapter_outData_enqOnly, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapter_outData_enqOnly = DEF_WILL_FIRE_RL_bram_serverAdapter_outData_enqOnly;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapter_outData_setFirstCore) != DEF_WILL_FIRE_RL_bram_serverAdapter_outData_setFirstCore)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapter_outData_setFirstCore, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapter_outData_setFirstCore = DEF_WILL_FIRE_RL_bram_serverAdapter_outData_setFirstCore;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapter_outData_setFirstEnq) != DEF_WILL_FIRE_RL_bram_serverAdapter_outData_setFirstEnq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapter_outData_setFirstEnq, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapter_outData_setFirstEnq = DEF_WILL_FIRE_RL_bram_serverAdapter_outData_setFirstEnq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapter_overRun) != DEF_WILL_FIRE_RL_bram_serverAdapter_overRun)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapter_overRun, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapter_overRun = DEF_WILL_FIRE_RL_bram_serverAdapter_overRun;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapter_s1__dreg_update) != DEF_WILL_FIRE_RL_bram_serverAdapter_s1__dreg_update)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapter_s1__dreg_update, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapter_s1__dreg_update = DEF_WILL_FIRE_RL_bram_serverAdapter_s1__dreg_update;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_bram_serverAdapter_stageReadResponseAlways) != DEF_WILL_FIRE_RL_bram_serverAdapter_stageReadResponseAlways)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_bram_serverAdapter_stageReadResponseAlways, 1u);
	backing.DEF_WILL_FIRE_RL_bram_serverAdapter_stageReadResponseAlways = DEF_WILL_FIRE_RL_bram_serverAdapter_stageReadResponseAlways;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_init_request_put) != DEF_WILL_FIRE_init_request_put)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_init_request_put, 1u);
	backing.DEF_WILL_FIRE_init_request_put = DEF_WILL_FIRE_init_request_put;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_request_put) != DEF_WILL_FIRE_request_put)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_request_put, 1u);
	backing.DEF_WILL_FIRE_request_put = DEF_WILL_FIRE_request_put;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_response_get) != DEF_WILL_FIRE_response_get)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_response_get, 1u);
	backing.DEF_WILL_FIRE_response_get = DEF_WILL_FIRE_response_get;
      }
      ++num;
      if ((backing.DEF_b__h907) != DEF_b__h907)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h907, 3u);
	backing.DEF_b__h907 = DEF_b__h907;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapter_cnt_1_whas____d77) != DEF_bram_serverAdapter_cnt_1_whas____d77)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapter_cnt_1_whas____d77, 1u);
	backing.DEF_bram_serverAdapter_cnt_1_whas____d77 = DEF_bram_serverAdapter_cnt_1_whas____d77;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapter_cnt_2_whas____d78) != DEF_bram_serverAdapter_cnt_2_whas____d78)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapter_cnt_2_whas____d78, 1u);
	backing.DEF_bram_serverAdapter_cnt_2_whas____d78 = DEF_bram_serverAdapter_cnt_2_whas____d78;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapter_cnt_3_whas____d82) != DEF_bram_serverAdapter_cnt_3_whas____d82)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapter_cnt_3_whas____d82, 1u);
	backing.DEF_bram_serverAdapter_cnt_3_whas____d82 = DEF_bram_serverAdapter_cnt_3_whas____d82;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapter_cnt_6_SLT_3___d73) != DEF_bram_serverAdapter_cnt_6_SLT_3___d73)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapter_cnt_6_SLT_3___d73, 1u);
	backing.DEF_bram_serverAdapter_cnt_6_SLT_3___d73 = DEF_bram_serverAdapter_cnt_6_SLT_3___d73;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapter_outDataCore_notEmpty____d74) != DEF_bram_serverAdapter_outDataCore_notEmpty____d74)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapter_outDataCore_notEmpty____d74, 1u);
	backing.DEF_bram_serverAdapter_outDataCore_notEmpty____d74 = DEF_bram_serverAdapter_outDataCore_notEmpty____d74;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapter_outData_enqData_whas____d75) != DEF_bram_serverAdapter_outData_enqData_whas____d75)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapter_outData_enqData_whas____d75, 1u);
	backing.DEF_bram_serverAdapter_outData_enqData_whas____d75 = DEF_bram_serverAdapter_outData_enqData_whas____d75;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapter_s1_0_BIT_0___d87) != DEF_bram_serverAdapter_s1_0_BIT_0___d87)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapter_s1_0_BIT_0___d87, 1u);
	backing.DEF_bram_serverAdapter_s1_0_BIT_0___d87 = DEF_bram_serverAdapter_s1_0_BIT_0___d87;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapter_s1___d85) != DEF_bram_serverAdapter_s1___d85)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapter_s1___d85, 2u);
	backing.DEF_bram_serverAdapter_s1___d85 = DEF_bram_serverAdapter_s1___d85;
      }
      ++num;
      if ((backing.DEF_memInit_initialized__h1870) != DEF_memInit_initialized__h1870)
      {
	vcd_write_val(sim_hdl, num, DEF_memInit_initialized__h1870, 1u);
	backing.DEF_memInit_initialized__h1870 = DEF_memInit_initialized__h1870;
      }
      ++num;
      if ((backing.DEF_x__h517) != DEF_x__h517)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h517, 16u);
	backing.DEF_x__h517 = DEF_x__h517;
      }
      ++num;
      if ((backing.PORT_EN_init_request_put) != PORT_EN_init_request_put)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_init_request_put, 1u);
	backing.PORT_EN_init_request_put = PORT_EN_init_request_put;
      }
      ++num;
      if ((backing.PORT_EN_request_put) != PORT_EN_request_put)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_request_put, 1u);
	backing.PORT_EN_request_put = PORT_EN_request_put;
      }
      ++num;
      if ((backing.PORT_EN_response_get) != PORT_EN_response_get)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_response_get, 1u);
	backing.PORT_EN_response_get = PORT_EN_response_get;
      }
      ++num;
      if ((backing.PORT_RDY_init_done) != PORT_RDY_init_done)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_init_done, 1u);
	backing.PORT_RDY_init_done = PORT_RDY_init_done;
      }
      ++num;
      if ((backing.PORT_RDY_init_request_put) != PORT_RDY_init_request_put)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_init_request_put, 1u);
	backing.PORT_RDY_init_request_put = PORT_RDY_init_request_put;
      }
      ++num;
      if ((backing.PORT_RDY_request_put) != PORT_RDY_request_put)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_request_put, 1u);
	backing.PORT_RDY_request_put = PORT_RDY_request_put;
      }
      ++num;
      if ((backing.PORT_RDY_response_get) != PORT_RDY_response_get)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_response_get, 1u);
	backing.PORT_RDY_response_get = PORT_RDY_response_get;
      }
      ++num;
      if ((backing.PORT_init_done) != PORT_init_done)
      {
	vcd_write_val(sim_hdl, num, PORT_init_done, 1u);
	backing.PORT_init_done = PORT_init_done;
      }
      ++num;
      if ((backing.PORT_init_request_put) != PORT_init_request_put)
      {
	vcd_write_val(sim_hdl, num, PORT_init_request_put, 33u);
	backing.PORT_init_request_put = PORT_init_request_put;
      }
      ++num;
      if ((backing.PORT_request_put) != PORT_request_put)
      {
	vcd_write_val(sim_hdl, num, PORT_request_put, 33u);
	backing.PORT_request_put = PORT_request_put;
      }
      ++num;
      if ((backing.PORT_response_get) != PORT_response_get)
      {
	vcd_write_val(sim_hdl, num, PORT_response_get, 16u);
	backing.PORT_response_get = PORT_response_get;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapter_cnt_finalAdd, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapter_cnt_finalAdd = DEF_CAN_FIRE_RL_bram_serverAdapter_cnt_finalAdd;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapter_moveToOutFIFO, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapter_moveToOutFIFO = DEF_CAN_FIRE_RL_bram_serverAdapter_moveToOutFIFO;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapter_outData_deqOnly, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapter_outData_deqOnly = DEF_CAN_FIRE_RL_bram_serverAdapter_outData_deqOnly;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapter_outData_enqAndDeq, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapter_outData_enqAndDeq = DEF_CAN_FIRE_RL_bram_serverAdapter_outData_enqAndDeq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapter_outData_enqOnly, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapter_outData_enqOnly = DEF_CAN_FIRE_RL_bram_serverAdapter_outData_enqOnly;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapter_outData_setFirstCore, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapter_outData_setFirstCore = DEF_CAN_FIRE_RL_bram_serverAdapter_outData_setFirstCore;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapter_outData_setFirstEnq, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapter_outData_setFirstEnq = DEF_CAN_FIRE_RL_bram_serverAdapter_outData_setFirstEnq;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapter_overRun, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapter_overRun = DEF_CAN_FIRE_RL_bram_serverAdapter_overRun;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapter_s1__dreg_update, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapter_s1__dreg_update = DEF_CAN_FIRE_RL_bram_serverAdapter_s1__dreg_update;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_bram_serverAdapter_stageReadResponseAlways, 1u);
      backing.DEF_CAN_FIRE_RL_bram_serverAdapter_stageReadResponseAlways = DEF_CAN_FIRE_RL_bram_serverAdapter_stageReadResponseAlways;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_init_done, 1u);
      backing.DEF_CAN_FIRE_init_done = DEF_CAN_FIRE_init_done;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_init_request_put, 1u);
      backing.DEF_CAN_FIRE_init_request_put = DEF_CAN_FIRE_init_request_put;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_request_put, 1u);
      backing.DEF_CAN_FIRE_request_put = DEF_CAN_FIRE_request_put;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_response_get, 1u);
      backing.DEF_CAN_FIRE_response_get = DEF_CAN_FIRE_response_get;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapter_cnt_finalAdd, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapter_cnt_finalAdd = DEF_WILL_FIRE_RL_bram_serverAdapter_cnt_finalAdd;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapter_moveToOutFIFO, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapter_moveToOutFIFO = DEF_WILL_FIRE_RL_bram_serverAdapter_moveToOutFIFO;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapter_outData_deqOnly, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapter_outData_deqOnly = DEF_WILL_FIRE_RL_bram_serverAdapter_outData_deqOnly;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapter_outData_enqAndDeq, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapter_outData_enqAndDeq = DEF_WILL_FIRE_RL_bram_serverAdapter_outData_enqAndDeq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapter_outData_enqOnly, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapter_outData_enqOnly = DEF_WILL_FIRE_RL_bram_serverAdapter_outData_enqOnly;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapter_outData_setFirstCore, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapter_outData_setFirstCore = DEF_WILL_FIRE_RL_bram_serverAdapter_outData_setFirstCore;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapter_outData_setFirstEnq, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapter_outData_setFirstEnq = DEF_WILL_FIRE_RL_bram_serverAdapter_outData_setFirstEnq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapter_overRun, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapter_overRun = DEF_WILL_FIRE_RL_bram_serverAdapter_overRun;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapter_s1__dreg_update, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapter_s1__dreg_update = DEF_WILL_FIRE_RL_bram_serverAdapter_s1__dreg_update;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_bram_serverAdapter_stageReadResponseAlways, 1u);
      backing.DEF_WILL_FIRE_RL_bram_serverAdapter_stageReadResponseAlways = DEF_WILL_FIRE_RL_bram_serverAdapter_stageReadResponseAlways;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_init_request_put, 1u);
      backing.DEF_WILL_FIRE_init_request_put = DEF_WILL_FIRE_init_request_put;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_request_put, 1u);
      backing.DEF_WILL_FIRE_request_put = DEF_WILL_FIRE_request_put;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_response_get, 1u);
      backing.DEF_WILL_FIRE_response_get = DEF_WILL_FIRE_response_get;
      vcd_write_val(sim_hdl, num++, DEF_b__h907, 3u);
      backing.DEF_b__h907 = DEF_b__h907;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapter_cnt_1_whas____d77, 1u);
      backing.DEF_bram_serverAdapter_cnt_1_whas____d77 = DEF_bram_serverAdapter_cnt_1_whas____d77;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapter_cnt_2_whas____d78, 1u);
      backing.DEF_bram_serverAdapter_cnt_2_whas____d78 = DEF_bram_serverAdapter_cnt_2_whas____d78;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapter_cnt_3_whas____d82, 1u);
      backing.DEF_bram_serverAdapter_cnt_3_whas____d82 = DEF_bram_serverAdapter_cnt_3_whas____d82;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapter_cnt_6_SLT_3___d73, 1u);
      backing.DEF_bram_serverAdapter_cnt_6_SLT_3___d73 = DEF_bram_serverAdapter_cnt_6_SLT_3___d73;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapter_outDataCore_notEmpty____d74, 1u);
      backing.DEF_bram_serverAdapter_outDataCore_notEmpty____d74 = DEF_bram_serverAdapter_outDataCore_notEmpty____d74;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapter_outData_enqData_whas____d75, 1u);
      backing.DEF_bram_serverAdapter_outData_enqData_whas____d75 = DEF_bram_serverAdapter_outData_enqData_whas____d75;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapter_s1_0_BIT_0___d87, 1u);
      backing.DEF_bram_serverAdapter_s1_0_BIT_0___d87 = DEF_bram_serverAdapter_s1_0_BIT_0___d87;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapter_s1___d85, 2u);
      backing.DEF_bram_serverAdapter_s1___d85 = DEF_bram_serverAdapter_s1___d85;
      vcd_write_val(sim_hdl, num++, DEF_memInit_initialized__h1870, 1u);
      backing.DEF_memInit_initialized__h1870 = DEF_memInit_initialized__h1870;
      vcd_write_val(sim_hdl, num++, DEF_x__h517, 16u);
      backing.DEF_x__h517 = DEF_x__h517;
      vcd_write_val(sim_hdl, num++, PORT_EN_init_request_put, 1u);
      backing.PORT_EN_init_request_put = PORT_EN_init_request_put;
      vcd_write_val(sim_hdl, num++, PORT_EN_request_put, 1u);
      backing.PORT_EN_request_put = PORT_EN_request_put;
      vcd_write_val(sim_hdl, num++, PORT_EN_response_get, 1u);
      backing.PORT_EN_response_get = PORT_EN_response_get;
      vcd_write_val(sim_hdl, num++, PORT_RDY_init_done, 1u);
      backing.PORT_RDY_init_done = PORT_RDY_init_done;
      vcd_write_val(sim_hdl, num++, PORT_RDY_init_request_put, 1u);
      backing.PORT_RDY_init_request_put = PORT_RDY_init_request_put;
      vcd_write_val(sim_hdl, num++, PORT_RDY_request_put, 1u);
      backing.PORT_RDY_request_put = PORT_RDY_request_put;
      vcd_write_val(sim_hdl, num++, PORT_RDY_response_get, 1u);
      backing.PORT_RDY_response_get = PORT_RDY_response_get;
      vcd_write_val(sim_hdl, num++, PORT_init_done, 1u);
      backing.PORT_init_done = PORT_init_done;
      vcd_write_val(sim_hdl, num++, PORT_init_request_put, 33u);
      backing.PORT_init_request_put = PORT_init_request_put;
      vcd_write_val(sim_hdl, num++, PORT_request_put, 33u);
      backing.PORT_request_put = PORT_request_put;
      vcd_write_val(sim_hdl, num++, PORT_response_get, 16u);
      backing.PORT_response_get = PORT_response_get;
    }
}

void MOD_mkMemory::vcd_prims(tVCDDumpType dt, MOD_mkMemory &backing)
{
  INST_bram_memory.dump_VCD(dt, backing.INST_bram_memory);
  INST_bram_serverAdapter_cnt.dump_VCD(dt, backing.INST_bram_serverAdapter_cnt);
  INST_bram_serverAdapter_cnt_1.dump_VCD(dt, backing.INST_bram_serverAdapter_cnt_1);
  INST_bram_serverAdapter_cnt_2.dump_VCD(dt, backing.INST_bram_serverAdapter_cnt_2);
  INST_bram_serverAdapter_cnt_3.dump_VCD(dt, backing.INST_bram_serverAdapter_cnt_3);
  INST_bram_serverAdapter_outDataCore.dump_VCD(dt, backing.INST_bram_serverAdapter_outDataCore);
  INST_bram_serverAdapter_outData_deqCalled.dump_VCD(dt,
						     backing.INST_bram_serverAdapter_outData_deqCalled);
  INST_bram_serverAdapter_outData_enqData.dump_VCD(dt,
						   backing.INST_bram_serverAdapter_outData_enqData);
  INST_bram_serverAdapter_outData_outData.dump_VCD(dt,
						   backing.INST_bram_serverAdapter_outData_outData);
  INST_bram_serverAdapter_s1.dump_VCD(dt, backing.INST_bram_serverAdapter_s1);
  INST_bram_serverAdapter_s1_1.dump_VCD(dt, backing.INST_bram_serverAdapter_s1_1);
  INST_bram_serverAdapter_writeWithResp.dump_VCD(dt, backing.INST_bram_serverAdapter_writeWithResp);
  INST_memInit_initialized.dump_VCD(dt, backing.INST_memInit_initialized);
}
